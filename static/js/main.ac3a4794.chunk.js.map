{"version":3,"sources":["helpers/TimeHelpers.js","hooks/useDatabase.js","hooks/useInterval.js","hooks/useLocalStorage.js","hooks/useLocalChanges.js","hooks/useSettings.js","components/FormElements/EventTypeSelector.js","components/FormElements/InlineFormGroup.js","components/PageHeading.js","components/TableRow.js","pages/History.js","pages/Home.js","pages/Settings.js","resources/wizard-hat.svg","components/WizardPages/ChooseClass.js","helpers/MiscHelpers.js","helpers/CssColors.js","components/FormElements/CustomSelect.js","components/FormElements/CssColorSelect.js","components/FormElements/ColorPicker.js","components/WizardPages/ChooseFontStyle.js","components/FormElements/AnimationSelect.js","components/WizardPages/ChooseRowStyle.js","components/WizardPages/FinishPage.js","components/RowFormattingWizard.js","pages/Types.js","components/RulesEngineAlerts.js","components/DatabaseManagedRoutes.js","webpack:///./src/resources/logo.svg?bd73","components/NavigationBar.js","pages/About.js","App.js","serviceWorker.js","index.js","resources/logo.svg"],"names":["getLocalIsoString","date","Date","getTime","getTimezoneOffset","toISOString","getLocalIsoDateAndTime","isoString","splitIsoString","dateSplit","split","timeSplit","getLocalTimezoneOffset","getTodaysStartAndEndDatetimes","todaysDate","timezoneOffset","dayStart","millisecondsInHour","getStartAndEndDatetimes","startDate","endDate","getWeekNumber","dateString","d","setUTCDate","getUTCDate","getUTCDay","year","getUTCFullYear","yearStart","UTC","Math","ceil","getWeekStartAndEnd","start","end","getHumanReadableTimeSinceDatetime","datePast","dateFormat","month","week","day","hour","minute","second","millisecond","difference","returnValue","lowerFormat","toLowerCase","yearToken","monthToken","weekToken","dayToken","hourToken","minuteToken","secondToken","millisecondToken","remainder","search","years","millisecondsInDay","floor","replace","months","weeks","days","hours","millisecondsInMinute","minutes","millisecondsInSecond","seconds","testDataEventTypes","name","id","lastModified","formatting","hidden","testDataEntries","datetime","event","useDatabase","useState","eventTypes","setEventTypes","events","setEvents","lastSync","setLastSync","notConnected","setNotConnected","eventTypeChangeQueue","eventChangeQueue","a","responseTypes","responseEvts","success","eventType","succeeds","index","findIndex","e","tryAddType","tryUpdateType","options","method","body","JSON","stringify","headers","fetch","ok","url","newEvent","eventId","updateEventTypesInRAM","eventTypesToModify","types","slice","eType","t","splice","push","addNewEventsToRAM","eventsToAdd","concat","deleteEventsFromRAM","eventsToDelete","isBulkChange","resultRows","r","bulkUpdateEventTypes","successes","array","evtType","origId","newType","i","find","ids","map","max","String","Number","indexOf","idx","bulkDeleteEvents","bulkAddEvents","evt","tryPullChanges","tryModifyType","tryAddEvent","tryDeleteEvent","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useLocalStorage","key","initialValue","item","window","localStorage","getItem","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","useLocalChanges","changes","setChanges","trackEventType","newLocalChanges","Object","assign","trackNewEvent","newEvents","trackDeletedEvent","deleteEvents","apply","updatedEvents","Array","isArray","updatedEventTypes","useSettings","pollInterval","setPollInterval","showHiddenTypes","setShowHiddenTypes","timeSinceFormat","setTimeSinceFormat","allowOfflineChanges","setAllowOfflineChanges","offlineOnly","setOfflineOnly","EventTypeSelector","props","defaultLabel","evtTypes","nofilter","Group","controlId","inline","as","Row","Label","column","xs","Control","onChange","type","target","className","style","minWidth","description","Text","InlineFormGroup","firstChild","React","Children","toArray","children","createElement","control","cloneElement","trim","label","PageHeading","alerts","alert","text","variant","dismissible","onClose","TableRow","noDate","time","noBtn","onClick","onDelete","timeSince","GroupRow","fontWeight","colSpan","groupName","FilterCard","border","Header","Body","typeValue","typeChange","newDate","endDateChange","startDateChange","groupBy","groupByChange","History","setType","setStartDate","setEndDate","setGroupBy","forEach","startDatetime","endDatetime","processedRows","rows","filter","row","evtStartDate","evtEndDate","sort","row1","row2","charAt","currentGroup","monthNames","group","toDateString","weekYear","begin","monthYear","getMonth","tableRows","tableRow","newGroup","striped","bordered","size","NewEventCard","setTime","eventButtons","title","evtClick","width","newTime","Home","toLocaleString","updateTime","setUpdateTime","modalInfo","setModalInfo","dayEnd","sortedFilteredRows","length","evtName","evtFormat","evtTime","deleteId","float","onRefresh","onNewEvent","show","Title","Footer","onDeleteEvent","Settings","showTimeSince","setShowTimeSince","min","newVal","onChangePollInterval","disabled","Check","checked","onChangeShowHiddenTypes","onChangeTimeSinceFormat","substring","placeholder","textDecorationLine","onChangeAllowOfflineChanges","onChangeOfflineOnly","_extends","arguments","source","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","viewBox","ref","ForwardRef","forwardRef","ChooseClass","classPrefix","rowClasses","classes","rc","getRowClass","setClassName","classOptions","toUpperCase","steps","curStep","cls","join","setFormatting","handleClassChange","isObjectEmpty","obj","entries","constructor","CssColors","colorValue","cssColors","color","colorString","hex","findColor","category","textColor","rgb","g","b","CustomSelect","filterText","setFilterText","showList","setShowList","blurring","setBlurring","findItemName","propValue","handleSelect","hideList","lowerFilter","listItems","items","object","insertGroups","listOptions","onMouseDown","preventDefault","onFocus","onBlur","findItem","emptyString","handleBlur","onKeyDown","val","CssColorSelect","c1","c2","backgroundColor","borderColor","undefined","lowerCaseFilterText","colorStringMatches","categoryMatches","colorItems","lastGroup","colorItem","textAlign","borderStyle","findName","ColorPicker","defaultName","colorName","setColorName","setColorValue","showPicker","setShowPicker","originalColor","reset","setColor","flexDirection","Dialog","display","height","startsWith","getHexColor","stopPropagation","prev","ChooseFontStyle","fontStyle","setFontStyle","fontDecoration","setFontDecoration","setFontWeight","fontColor","setFontColor","fontVariant","setFontVariant","fontSize","setFontSize","decorationOptions","changedDecoration","decoration","handleDecorationChange","weightOptions","w","sizeOptions","s","handleStyleChange","handleWeightChange","handleVariantChange","handleSizeChange","handleColorChange","animations","AnimationSelect","findAnimation","searchText","animation","ChooseRowStyle","getAnimationClass","backColor","setBackColor","setTextAlign","alignOptions","handleAlignChange","FinishPage","RowFormattingWizard","showWizard","setShowWizard","setCurStep","handleDismiss","resetWizard","formattingString","breadcrumbs","Item","active","href","onHide","dialogClassName","closeButton","alt","InputName","required","InputFormatting","Append","CheckDelete","Types","setId","setName","deleteType","setDeleteType","setNewType","alertText","setAlertText","showHidden","newName","newFormatting","newValue","onEditType","handleSubmit","RulesEngineAlerts","DatabaseManagedRoutes","database","localChanges","settings","syncInterval","exitingOfflineOnly","handleEditType","localChangesAllowed","handleNewEvent","timeStr","newEvt","generateNewEvent","handleDeleteEvent","dateTime","otherReservedEventIds","newEvtIds","newId","tryPushLocalChanges","eventTypeChanges","newEventsToPush","syncData","path","exact","render","handleSetOfflineOnly","fill","cx","cy","NavigationBar","navCollapsed","setNavCollapsed","changeCollapsed","toggle","expand","bg","expanded","Brand","basename","Toggle","Collapse","Link","to","About","src","logo","rel","AppRouter","component","Boolean","location","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ac3a4794.chunk.js","sourcesContent":["/**\r\n * Returns the ISO-formatted string for the local timezone of the specified Date object.\r\n * @param {Date} date - Date object for which to return the local ISO string.\r\n * @returns {string} The ISO-formatted string corresponding to the local time of the specified Date.\r\n */\r\nexport const getLocalIsoString = function(date) {\r\n  return new Date(\r\n    date.getTime() - date.getTimezoneOffset() * 60000\r\n  ).toISOString();\r\n};\r\n\r\n/**\r\n * Returns an array containing the local ISO-formatted date and time.\r\n * @param {Date} date - Date object for which to generate the local ISO strings.\r\n * @returns {Array<string>} Array containing the local ISO-formatted date (index 0) and time (index 1).\r\n */\r\nexport const getLocalIsoDateAndTime = function(date) {\r\n  const isoString = getLocalIsoString(date);\r\n  return splitIsoString(isoString);\r\n};\r\n\r\n/**\r\n * Returns an array containing the date and time.\r\n * @param {string} isoString - ISO string to split.\r\n * @returns {Array<string>} Array containing the ISO-formatted date (index 0) and time (index 1).\r\n */\r\nexport const splitIsoString = function(isoString) {\r\n  const dateSplit = isoString.split('T');\r\n  const timeSplit = dateSplit[1].split('.');\r\n  return [dateSplit[0], timeSplit[0]];\r\n};\r\n\r\nexport const millisecondsInSecond = 1000;\r\nexport const secondsInMinute = 60;\r\nexport const minutesInHour = 60;\r\nexport const hoursInDay = 24;\r\nexport const daysInWeek = 7;\r\nexport const averageDaysInYear = 365.25;\r\nexport const monthsInYear = 12;\r\nexport const averageDaysInMonth = averageDaysInYear / monthsInYear;\r\nexport const weeksInYear = averageDaysInYear / daysInWeek;\r\nexport const averageWeeksInMonth = weeksInYear / monthsInYear;\r\nexport const millisecondsInMinute = millisecondsInSecond * secondsInMinute;\r\nexport const millisecondsInHour = millisecondsInMinute * minutesInHour;\r\nexport const millisecondsInDay = millisecondsInHour * hoursInDay;\r\nexport const averageMillisecondsInWeek = millisecondsInDay * daysInWeek;\r\nexport const averageMillisecondsInMonth =\r\n  millisecondsInDay * averageDaysInMonth;\r\nexport const averageMillisecondsInYear = millisecondsInDay * averageDaysInYear;\r\n\r\n/**\r\n * Return the number of milliseconds of the timezone offset for the provided date.\r\n * @param {Date} date - Date for which to get the offset.\r\n * @returns {number} Number of milliseconds of the timezone offset.\r\n */\r\nexport const getLocalTimezoneOffset = function(date) {\r\n  return date.getTimezoneOffset() * 60000;\r\n};\r\n\r\n/**\r\n * Get the datetimes for the beginning of today (local time) and end of today (local time).\r\n * @returns {Array<number>} Array containing the datetimes (in milliseconds) of the beginning of today (index 0) and end of today (index 1) for the local timezone.\r\n */\r\nexport const getTodaysStartAndEndDatetimes = function() {\r\n  const todaysDate = new Date(getLocalIsoString(new Date()).split('T')[0]); // Get beginning of today UTC\r\n  const timezoneOffset = getLocalTimezoneOffset(todaysDate);\r\n  const dayStart = todaysDate.getTime() + timezoneOffset;\r\n  const dayEnd = dayStart + (millisecondsInDay - 1);\r\n  return [dayStart, dayEnd];\r\n};\r\n\r\n/**\r\n * Get the datetimes for the beginning of startDate (local time) and end of endDate (local time).\r\n * @param {string} startDate - String containing start date formatted as yyyy-mm-dd\r\n * @param {string} endDate - String containing end date formatted as yyyy-mm-dd\r\n * @returns {Array<number>} Array containing the datetimes (in milliseconds) of the beginning of startDate (index 0) and end of endDate (index 1) for the local timezone.\r\n */\r\nexport const getStartAndEndDatetimes = function(startDate, endDate) {\r\n  const timezoneOffset = getLocalTimezoneOffset(new Date());\r\n  const startDatetime = startDate\r\n    ? new Date(startDate).getTime() + timezoneOffset\r\n    : null;\r\n  const endDatetime = endDate\r\n    ? new Date(endDate).getTime() + timezoneOffset + (millisecondsInDay - 1)\r\n    : null;\r\n  return [startDatetime, endDatetime];\r\n};\r\n\r\n/* Source: https://stackoverflow.com/a/6117889\r\n * ===========================================\r\n * For a given date, get the ISO week number\r\n *\r\n * Based on information at:\r\n *\r\n *    http://www.merlyn.demon.co.uk/weekcalc.htm#WNR\r\n *\r\n * Algorithm is to find nearest thursday, it's year\r\n * is the year of the week number. Then get weeks\r\n * between that date and the first day of that year.\r\n *\r\n * Note that dates in one year can be weeks of previous\r\n * or next year, overlap is up to 3 days.\r\n *\r\n * e.g. 2014/12/29 is Monday in week  1 of 2015\r\n *      2012/1/1   is Sunday in week 52 of 2011\r\n */\r\n/**\r\n * Get the ISO week number and year for a given date. A week is defined as starting on\r\n * Monday and belongs to whichever year the Thursday resides in.\\\r\n * Source: https://stackoverflow.com/a/6117889\r\n * @param {Date} d - Date to get week number of.\r\n * @returns {Array<number>} Array with the week's year (index 0) and week number (index 1) of the provided date\r\n */\r\nexport const getIsoWeekNumber = function(d) {\r\n  // Copy date so don't modify original\r\n  d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\r\n  // Set to nearest Thursday: current date + 4 - current day number\r\n  // Make Sunday's day number 7\r\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\r\n  // Get first day of year\r\n  var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  // Calculate full weeks to nearest Thursday\r\n  var weekNo = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\r\n  // Return array of year and week number\r\n  return [d.getUTCFullYear(), weekNo];\r\n};\r\n\r\n/**\r\n * Get the week number and year for a given date. A week is defined as starting on\r\n * Sunday and belongs to whichever year the Wednesday resides in.\\\r\n * Based on: https://stackoverflow.com/a/6117889\r\n * @param {string} dateString - String containing date for which to calculate the week number formatted as yyyy-mm-dd\r\n * @returns {Array<number>} Array with the week's year (index 0) and week number (index 1) of the provided date\r\n */\r\nexport const getWeekNumber = function(dateString) {\r\n  let d = new Date(dateString);\r\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() + 1)); // +4 since we're targeting Wednesday, and +1 to make days 1-indexed\r\n  const year = d.getUTCFullYear();\r\n  const yearStart = new Date(Date.UTC(year, 0, 1));\r\n  const weekNo = Math.ceil((d - yearStart) / millisecondsInDay / 7);\r\n  return [year, weekNo];\r\n};\r\n\r\n/**\r\n * Get the dates corresponding to the beginning and end of the week that the dateString belongs to.\r\n * @param {string} dateString - String containing date for which to get the dates of the beginning and end of its week. Formatted as yyy-mm-dd.\r\n * @returns {Array<Date>} Array containing the date for the beginning of the week (index 0) and the end of the week (index 1)\r\n */\r\nexport const getWeekStartAndEnd = function(dateString) {\r\n  let start = new Date(dateString);\r\n  start.setUTCDate(start.getUTCDate() - start.getUTCDay());\r\n  start = new Date(start.getTime() + getLocalTimezoneOffset(start));\r\n  let end = new Date(start.getTime());\r\n  end.setUTCDate(end.getUTCDate() + 6);\r\n  return [start, end];\r\n};\r\n\r\n/**\r\n * Calculate the amount of time that has passed since a specified date and return it in a human-readable format. It is possible to define a custom format. \\\r\n * Note: It uses average lengths for everything (e.g. average number of days in a month)\r\n * @param {Date} datePast - The past date to calculate the time since\r\n * @param {string} [dateFormat=\"{year}y{day}d\"] - The format to display time since in. Add tokens where you want different time periods to appear. \\\r\n * Valid tokens are: {year}, {month}, {week}, {day}, {hour}, {minute}, {second}, and {millisecond} \\\r\n * Defaults to: \"{year}y{day}d\"\r\n * @returns {string} The time since the specified date occured in a human-readable format defined by the dateFormat.\r\n */\r\nexport const getHumanReadableTimeSinceDatetime = function(\r\n  datePast,\r\n  dateFormat\r\n) {\r\n  let year, month, week, day, hour, minute, second, millisecond;\r\n  const dateNow = new Date();\r\n  const difference = dateNow.getTime() - datePast.getTime();\r\n  let returnValue = dateFormat || '{year}y{day}d';\r\n  const lowerFormat = returnValue.toLowerCase();\r\n\r\n  const yearToken = /{year}/i;\r\n  const monthToken = /{month}/i;\r\n  const weekToken = /{week}/i;\r\n  const dayToken = /{day}/i;\r\n  const hourToken = /{hour}/i;\r\n  const minuteToken = /{minute}/i;\r\n  const secondToken = /{second}/i;\r\n  const millisecondToken = /{millisecond}/i;\r\n\r\n  let remainder = difference;\r\n  if (lowerFormat.search(yearToken) !== -1) {\r\n    const years = difference / averageMillisecondsInYear;\r\n    year = Math.floor(years);\r\n    returnValue = returnValue.replace(yearToken, year);\r\n    remainder = remainder - year * averageMillisecondsInYear;\r\n  }\r\n  if (lowerFormat.search(monthToken) !== -1) {\r\n    const months = remainder / averageMillisecondsInMonth;\r\n    month = Math.floor(months);\r\n    returnValue = returnValue.replace(monthToken, month);\r\n    remainder = remainder - month * averageMillisecondsInMonth;\r\n  }\r\n  if (lowerFormat.search(weekToken) !== -1) {\r\n    const weeks = remainder / averageMillisecondsInWeek;\r\n    week = Math.floor(weeks);\r\n    returnValue = returnValue.replace(weekToken, week);\r\n    remainder = remainder - week * averageMillisecondsInWeek;\r\n  }\r\n  if (lowerFormat.search(dayToken) !== -1) {\r\n    const days = remainder / millisecondsInDay;\r\n    day = Math.floor(days);\r\n    returnValue = returnValue.replace(dayToken, day);\r\n    remainder = remainder - day * millisecondsInDay;\r\n  }\r\n  if (lowerFormat.search(hourToken) !== -1) {\r\n    const hours = remainder / millisecondsInHour;\r\n    hour = Math.floor(hours);\r\n    returnValue = returnValue.replace(hourToken, hour);\r\n    remainder = remainder - hour * millisecondsInHour;\r\n  }\r\n  if (lowerFormat.search(minuteToken) !== -1) {\r\n    const minutes = remainder / millisecondsInMinute;\r\n    minute = Math.floor(minutes);\r\n    returnValue = returnValue.replace(minuteToken, minute);\r\n    remainder = remainder - minute * millisecondsInMinute;\r\n  }\r\n  if (lowerFormat.search(secondToken) !== -1) {\r\n    const seconds = remainder / millisecondsInSecond;\r\n    second = Math.floor(seconds);\r\n    returnValue = returnValue.replace(secondToken, second);\r\n    remainder = remainder - second * millisecondsInSecond;\r\n  }\r\n  if (lowerFormat.search(millisecondToken) !== -1) {\r\n    millisecond = remainder;\r\n    returnValue = returnValue.replace(millisecondToken, millisecond);\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n","import { useState } from 'react';\r\n\r\n//#region Test Data        TODO: Remove\r\nconst testDataEventTypes = [\r\n  { name: '#1', id: '1', lastModified: 1568223239995 },\r\n  { name: 'test', id: '2', lastModified: 1568223239996 },\r\n  { name: 'meal', id: '3', lastModified: 1568223239997 },\r\n  {\r\n    name: 'Example',\r\n    id: '4',\r\n    formatting:\r\n      '{\"className\":\"table-warning\", \"style\":{\"fontStyle\": \"italic\"}}',\r\n    lastModified: 1568223239998\r\n  },\r\n  {\r\n    name: 'hidden-example',\r\n    id: '5',\r\n    hidden: true,\r\n    lastModified: 1568223239999\r\n  },\r\n  {\r\n    name: 'Look at me!',\r\n    id: '6',\r\n    formatting:\r\n      '{\"className\":\"ani-loading \",\"style\":{\"fontStyle\":\"italic\",\"textDecorationLine\":\"underline  line-through\",\"fontVariant\":\"small-caps\",\"fontWeight\":\"bold\",\"fontSize\":\"1.25em\",\"color\":\"#0000ff\",\"textAlign\":\"center\"}}',\r\n    lastModified: 1570558195000\r\n  }\r\n];\r\n\r\nconst testDataEntries = [\r\n  { datetime: 1568223240000, event: '1', id: '123' },\r\n  { datetime: 1568237400000, event: '2', id: '235' },\r\n  { datetime: 1568240640000, event: '3', id: '332' },\r\n  { datetime: 1568229546000, event: '4', id: '331' },\r\n  { datetime: 1568309640000, event: '4', id: '400' },\r\n  { datetime: 1568323800000, event: '3', id: '404' },\r\n  { datetime: 1568327040000, event: '2', id: '408' },\r\n  { datetime: 1568315946000, event: '1', id: '402' },\r\n  { datetime: 1570558195000, event: '6', id: '409' }\r\n];\r\n//#endregion\r\n\r\n/** Hook that keeps the state of the data from the database and handles interactions with the database */\r\nfunction useDatabase() {\r\n  const [eventTypes, setEventTypes] = useState(testDataEventTypes);\r\n  const [events, setEvents] = useState(testDataEntries);\r\n  const [lastSync, setLastSync] = useState();\r\n  const [notConnected, setNotConnected] = useState(false);\r\n\r\n  /**\r\n   * Attemps to pull the updated lists of event types and events.\r\n   * @param {Array<EventType>} eventTypeChangeQueue - Array of event types to pass back if it fails to pull changes from the database.\r\n   * @param {Array<EventObj>} eventChangeQueue - Array of events to pass back if it fails to pull changes from the database.\r\n   * @returns {[boolean, Array<EventType>, Array<EventObj>]} Array containing whether it succeeds (index 0), the list of event types (index 1), and the list of events (index 2)\r\n   */\r\n  async function tryPullChanges(eventTypeChangeQueue, eventChangeQueue) {\r\n    let responseTypes = eventTypeChangeQueue; // TODO: find a better way to handle this\r\n    let responseEvts = eventChangeQueue;\r\n    let success = true;\r\n    // TODO: uncomment\r\n    try {\r\n      // const typeResponse = await fetch('/event-types');\r\n      // if (typeResponse.ok) responseTypes = await typeResponse.json();\r\n      // else throw new Error('non-success response');\r\n      // const evtResponse = await fetch('/events');\r\n      // if (evtResponse.ok) responseEvts = await evtResponse.json();\r\n      // else throw new Error('non-success response');\r\n      // eventTypeChangeQueue = responseTypes;\r\n      // eventChangeQueue = responseEvts;\r\n      setLastSync(new Date().getTime());\r\n    } catch {\r\n      success = false;\r\n    }\r\n    return [success, responseTypes, responseEvts];\r\n  }\r\n\r\n  /**\r\n   * Determine if the event type is new or modified and take the appropriate action in the database.\r\n   * @param {EventType} eventType - The event type to add/modify.\r\n   * @returns {boolean} True if the transaction succeeds.\r\n   */\r\n  async function tryModifyType(eventType) {\r\n    let succeeds = true;\r\n    const index = eventTypes.findIndex(e => e.id === eventType.id);\r\n    let newType = index === -1;\r\n    if (newType) {\r\n      succeeds = tryAddType(eventType);\r\n    } else {\r\n      succeeds = tryUpdateType(eventType);\r\n    }\r\n    return succeeds;\r\n  }\r\n\r\n  /**\r\n   * Attempt to add an event type to the database.\r\n   * @param {EventType} eventType - The event type to add.\r\n   * @returns {boolean} True if the add succeeds.\r\n   */\r\n  async function tryAddType(eventType) {\r\n    let succeeds = true;\r\n    try {\r\n      const url = '/event-types';\r\n      const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(eventType),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const typeResponse = await fetch(url, options);\r\n      if (!typeResponse.ok) succeeds = false;\r\n    } catch {\r\n      succeeds = false;\r\n    }\r\n    return succeeds;\r\n  }\r\n\r\n  /**\r\n   * Attempt to update an event type in the database.\r\n   * @param {EventType} eventType - The modified event type to update.\r\n   * @returns {boolean} True if the update succeeds.\r\n   */\r\n  async function tryUpdateType(eventType) {\r\n    let succeeds = true;\r\n    try {\r\n      const url = `/event-types/${eventType.id}`;\r\n      const options = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(eventType),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const typeResponse = await fetch(url, options);\r\n      if (!typeResponse.ok) succeeds = false;\r\n    } catch {\r\n      succeeds = false;\r\n    }\r\n    return succeeds;\r\n  }\r\n\r\n  /**\r\n   * Attempt to add an event to the database.\r\n   * @param {EventObj} newEvent - The event to add.\r\n   * @returns {boolean} True if the add succeeds.\r\n   */\r\n  async function tryAddEvent(newEvent) {\r\n    let succeeds = true;\r\n    try {\r\n      const url = '/events';\r\n      const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(newEvent),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const typeResponse = await fetch(url, options);\r\n      if (!typeResponse.ok) succeeds = false;\r\n    } catch {\r\n      succeeds = false;\r\n    }\r\n    return succeeds;\r\n  }\r\n\r\n  /**\r\n   * Attempt to delete an event from the database.\r\n   * @param {number} eventId - The ID of the event to delete.\r\n   * @returns {boolean} True if the delete succeeds.\r\n   */\r\n  async function tryDeleteEvent(eventId) {\r\n    let succeeds = true;\r\n    try {\r\n      const url = `/events/${eventId}`;\r\n      const options = {\r\n        method: 'DELETE'\r\n      };\r\n      const typeResponse = await fetch(url, options);\r\n      if (!typeResponse.ok) succeeds = false;\r\n    } catch {\r\n      succeeds = false;\r\n    }\r\n    return succeeds;\r\n  }\r\n\r\n  /**\r\n   * Adds/modifies multiple event types in the database.\r\n   * @param {Array<EventType>} eventTypesToModify - Array of event types to be added to/modified in the database.\r\n   * @param {Array<EventType>} eventTypeChangeQueue - Working array of event types to be applied after all bulk changes are complete.\r\n   * @returns {Array<number>} Array of event types that were successfully added to/modified in the database.\r\n   */\r\n  function bulkUpdateEventTypes(eventTypesToModify, eventTypeChangeQueue) {\r\n    let successes = [];\r\n    const array = eventTypesToModify.slice();\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let evtType of array) {\r\n      // TODO: maybe update event types in bulk and respond with failures\r\n      let success = true;\r\n      const origId = evtType.id;\r\n      const index = eventTypes.findIndex(e => e.id === evtType.id);\r\n      const newType = index === -1;\r\n      // Handle id conflicts\r\n      const i = eventTypeChangeQueue.find(t => t.id === evtType.id);\r\n      if (i) {\r\n        if (newType) {\r\n          // get the highest existing event id.   TODO: check if there's a more efficient way\r\n          const ids = eventTypeChangeQueue\r\n            .map(t => t.id)\r\n            .concat(eventTypesToModify.map(t => t.id));\r\n          let max = -1;\r\n          for (let i of ids) if (i > max) max = i; // eslint-disable-line no-unused-vars\r\n\r\n          evtType.id = String(Number(max) + 1);\r\n        } else if (i.lastModified > evtType.lastModified) {\r\n          const index = eventTypesToModify.indexOf(evtType);\r\n          eventTypesToModify.splice(index, 1);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // TODO: uncomment\r\n      // if (newType) {\r\n      //   success = tryAddType(evtType);\r\n      // } else {\r\n      //   success = tryUpdateType(evtType);\r\n      // }\r\n      if (success) {\r\n        const idx = eventTypesToModify.findIndex(t => t.id === origId);\r\n        successes.push(eventTypesToModify.splice(idx, 1)[0]);\r\n      }\r\n    }\r\n    return successes;\r\n  }\r\n\r\n  /**\r\n   * Adds multiple events to the database.\r\n   * @param {Array<EventObj>} eventsToAdd - Array of events to be added to the database.\r\n   * @returns {Array<EventObj>} Array of events that were successfully added to the database.\r\n   */\r\n  function bulkAddEvents(eventsToAdd) {\r\n    let successes = [];\r\n    const array = eventsToAdd.slice();\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let evt of array) {\r\n      // TODO: maybe add events in bulk and respond with failures\r\n      //if (tryAddEvent(evt)) {\r\n      if (true) {\r\n        // TODO: Delete and uncomment line above\r\n        const index = eventsToAdd.indexOf(evt);\r\n        successes.push(eventsToAdd.splice(index, 1)[0]);\r\n      }\r\n    }\r\n    return successes;\r\n  }\r\n\r\n  /**\r\n   * Deletes multiple events from the database.\r\n   * @param {Array<number>} eventsToDelete - List of ID's of the events to be deleted from the database.\r\n   * @param {Array<EventObj>} eventChangeQueue - Working array of the events to be applied after all bulk changes are complete.\r\n   * @returns {Array<number>} Array of ID's of the events that were successfully deleted from the database.\r\n   */\r\n  function bulkDeleteEvents(eventsToDelete, eventChangeQueue) {\r\n    let successes = [];\r\n    const array = eventsToDelete.slice();\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let id of array) {\r\n      // skip delete if event has been updated since last sync\r\n      const i = eventChangeQueue.findIndex(\r\n        e => e.id === id && e.lastModified > lastSync\r\n      );\r\n      if (i !== -1) {\r\n        const index = eventsToDelete.indexOf(id);\r\n        eventsToDelete.splice(index, 1);\r\n        continue;\r\n      }\r\n      // TODO: maybe delete events in bulk and respond with failures\r\n      //if (tryDeleteEvent(id)) {\r\n      if (true) {\r\n        // TODO: Delete and uncomment line above\r\n        const index = eventsToDelete.indexOf(id);\r\n        successes.push(eventsToDelete.splice(index, 1)[0]);\r\n      }\r\n    }\r\n    return successes;\r\n  }\r\n\r\n  /**\r\n   * Modify/add the specified event types in the local memory (RAM) copy of the event types.\r\n   * @param {Array<EventType>} eventTypesToModify - Array of modified/new event types to change in RAM.\r\n   * @param {Array<EventType>} [eventTypeChangeQueue] - The working array of event types to be applied after all bulk changes are finished.\r\n   * @returns {void|Array<EventType>} Returns the updated eventChangeQueue if one is specified.\r\n   */\r\n  function updateEventTypesInRAM(eventTypesToModify, eventTypeChangeQueue) {\r\n    let types = eventTypes.slice();\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let eType of eventTypesToModify) {\r\n      const index = types.findIndex(t => t.id === eType.id);\r\n      if (index >= 0) {\r\n        types.splice(index, 1, eType);\r\n      } else {\r\n        types.push(eType);\r\n      }\r\n    }\r\n    if (!eventTypeChangeQueue) {\r\n      setEventTypes(types);\r\n    } else {\r\n      return types;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the specified events to the local memory (RAM) copy of the events.\r\n   * @param {Array<EventObj>} eventsToAdd - Array of events to add to RAM.\r\n   * @param {Array<EventObj>} [eventChangeQueue] - The working array of events to be applied after all bulk changes are finished.\r\n   * @returns {void|Array<EventObj>} Returns the updated eventChangeQueue if one is specified.\r\n   */\r\n  function addNewEventsToRAM(eventsToAdd, eventChangeQueue) {\r\n    if (!eventChangeQueue) {\r\n      setEvents(events.concat(eventsToAdd));\r\n    } else {\r\n      return eventChangeQueue.concat(eventsToAdd);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete the specified events from the local memory (RAM) copy of the events.\r\n   * @param {Array<number>} eventsToDelete - Array of ID's of events to delete from RAM.\r\n   * @param {boolean} [isBulkChange] - Set to true if this is part of a bulk change.\r\n   * @returns {void|Array<EventObj>} Returns the array of events after deleting the events specified if isBulkChange is true.\r\n   */\r\n  function deleteEventsFromRAM(eventsToDelete, isBulkChange) {\r\n    const resultRows = events.slice();\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (let id of eventsToDelete) {\r\n      const index = resultRows.findIndex(r => r.id === id);\r\n      resultRows.splice(index, 1);\r\n    }\r\n    if (!isBulkChange) {\r\n      setEvents(resultRows);\r\n    } else {\r\n      return resultRows;\r\n    }\r\n  }\r\n\r\n  return {\r\n    events: events,\r\n    eventTypes: eventTypes,\r\n    lastSync: lastSync,\r\n    notConnected: notConnected,\r\n    setEvents: setEvents, // TODO: maybe don't directly expose these\r\n    setEventTypes: setEventTypes,\r\n    setNotConnected: setNotConnected, // TODO: handle this internally instead of passing it out\r\n    updateEventTypesInRAM: updateEventTypesInRAM,\r\n    addNewEventsToRAM: addNewEventsToRAM,\r\n    deleteEventsFromRAM: deleteEventsFromRAM,\r\n    bulkUpdateEventTypes: bulkUpdateEventTypes,\r\n    bulkDeleteEvents: bulkDeleteEvents,\r\n    bulkAddEvents: bulkAddEvents,\r\n    tryPullChanges: tryPullChanges,\r\n    tryModifyType: tryModifyType,\r\n    tryAddEvent: tryAddEvent,\r\n    tryDeleteEvent: tryDeleteEvent\r\n  };\r\n}\r\n\r\nexport default useDatabase;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Hook that sets up, maintains, and cleans up an interval.   \\\r\n * Source: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n * @param {Function} callback - The function to call after delay\r\n * @param {number} delay - The delay of the interval in milliseconds. Passing null pauses it.\r\n */\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","import { useState } from 'react';\r\n\r\n/**\r\n * Hook that allows you to use local storage similar to useState   \\\r\n * Source: https://usehooks.com/useLocalStorage/\r\n * @param {string} key - the local storage key to use\r\n * @param {*} initialValue - the value to use if the key isn't present in local storage\r\n * @returns {[*, (newValue)=>void]} array containing the variable (index 0) and the function to set the variable (index 1)\r\n */\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import useLocalStorage from '../hooks/useLocalStorage';\r\n\r\n/**\r\n * Hook that tracks and applies changes in the local storage.\r\n */\r\nfunction useLocalChanges() {\r\n  /** @type {[LocalChangesObj, (localChanges:LocalChangesObj)=>void]} */\r\n  const [changes, setChanges] = useLocalStorage('local-changes', null);\r\n\r\n  /**\r\n   * Track modifications to the event type in the local changes.\r\n   * @param {EventType} eventType - The event type (after modifications) to be tracked in the local changes.\r\n   */\r\n  function trackEventType(eventType) {\r\n    let newLocalChanges = Object.assign({}, changes || {});\r\n    if (!newLocalChanges.eventTypes) newLocalChanges.eventTypes = [];\r\n\r\n    // Remove event type with same ID in local changes\r\n    const idx = newLocalChanges.eventTypes.findIndex(\r\n      e => e.id === eventType.id\r\n    );\r\n    if (idx !== -1) newLocalChanges.eventTypes.splice(idx, 1);\r\n\r\n    // Add new/modified event type to local changes\r\n    newLocalChanges.eventTypes.push(eventType);\r\n    setChanges(newLocalChanges);\r\n  }\r\n\r\n  /**\r\n   * Track new event in the local changes.\r\n   * @param {EventObj} newEvent - The new event that should be added to the local changes.\r\n   */\r\n  function trackNewEvent(newEvent) {\r\n    let newLocalChanges = Object.assign({}, changes || {});\r\n    if (!newLocalChanges.newEvents) newLocalChanges.newEvents = [];\r\n    newLocalChanges.newEvents.push(newEvent);\r\n    setChanges(newLocalChanges);\r\n  }\r\n\r\n  /**\r\n   * Track deleted event in the local changes.\r\n   * @param {number} eventId - The ID of the event that should be deleted in the local changes.\r\n   */\r\n  function trackDeletedEvent(eventId) {\r\n    let newLocalChanges = Object.assign({}, changes || {});\r\n\r\n    // make sure the id doesn't correspond to an id in the newEvents changes\r\n    let index = -2;\r\n    if (newLocalChanges && newLocalChanges.newEvents) {\r\n      index = newLocalChanges.newEvents.findIndex(evt => evt.id === eventId);\r\n    }\r\n\r\n    if (index >= 0) {\r\n      // event is in localChanges as new event, so we remove it\r\n      newLocalChanges.newEvents.splice(index, 1);\r\n    } else {\r\n      if (!newLocalChanges.deleteEvents) newLocalChanges.deleteEvents = [];\r\n      newLocalChanges.deleteEvents.push(eventId);\r\n    }\r\n    setChanges(newLocalChanges);\r\n  }\r\n\r\n  /**\r\n   * Apply the local changes to the events and event types provided.\r\n   * @param {Array<EventObj>} events - The array of events to apply the local changes to.\r\n   * @param {Array<EventType>} eventTypes - The array of event types to apply the local changes to.\r\n   * @returns {[Array<EventObj>, Array<EventType>]} Array containing the modified events (index 0) and event types (index 1)\r\n   */\r\n  function apply(events, eventTypes) {\r\n    let updatedEvents = Array.isArray(events) ? events.slice() : [];\r\n    let updatedEventTypes = Array.isArray(eventTypes) ? eventTypes.slice() : [];\r\n    if (changes) {\r\n      if (changes.newEvents) {\r\n        updatedEvents = updatedEvents.concat(changes.newEvents);\r\n      }\r\n      if (changes.deleteEvents) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let id of changes.deleteEvents) {\r\n          const index = updatedEvents.findIndex(evt => evt.id === id);\r\n          if (index >= 0) updatedEvents.splice(index, 1);\r\n        }\r\n      }\r\n      if (changes.eventTypes) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (let eType of changes.eventTypes) {\r\n          const index = updatedEventTypes.findIndex(t => t.id === eType.id);\r\n          if (index >= 0) {\r\n            updatedEventTypes.splice(index, 1, eType);\r\n          } else {\r\n            updatedEventTypes.push(eType);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return [updatedEvents, updatedEventTypes];\r\n  }\r\n\r\n  return {\r\n    changes: changes,\r\n    setChanges: setChanges,\r\n    trackEventType: trackEventType,\r\n    trackNewEvent: trackNewEvent,\r\n    trackDeletedEvent: trackDeletedEvent,\r\n    apply: apply\r\n  };\r\n}\r\n\r\nexport default useLocalChanges;\r\n","import useLocalStorage from '../hooks/useLocalStorage';\r\n\r\n/**\r\n * Hook to manage the settings and local storage.\r\n * @returns {{\r\n *    pollInterval:number,\r\n *    setPollInterval:(pollInterval:number)=>void,\r\n *    showHiddenTypes:boolean,\r\n *    setShowHiddenTypes:(showHiddenTypes:boolean)=>void,\r\n *    timeSinceFormat:string|boolean,\r\n *    setTimeSinceFormat:(timeSinceFormat:string|boolean)=>void,\r\n *    allowOfflineChanges:boolean,\r\n *    setAllowOfflineChanges:(allowOfflineChanges:boolean)=>void,\r\n *    offlineOnly:boolean,\r\n *    setOfflineOnly:(offlineOnly:boolean)=>void\r\n * }} Object with settings and their setters.\r\n */\r\nfunction useSettings() {\r\n  const [pollInterval, setPollInterval] = useLocalStorage('poll-interval', 0);\r\n  const [showHiddenTypes, setShowHiddenTypes] = useLocalStorage(\r\n    'show-hidden-types',\r\n    false\r\n  );\r\n  const [timeSinceFormat, setTimeSinceFormat] = useLocalStorage(\r\n    'time-since-format',\r\n    false\r\n  );\r\n  const [allowOfflineChanges, setAllowOfflineChanges] = useLocalStorage(\r\n    'allow-offline-changes',\r\n    false\r\n  );\r\n  const [offlineOnly, setOfflineOnly] = useLocalStorage('offline-only', false);\r\n\r\n  return {\r\n    pollInterval: pollInterval,\r\n    setPollInterval: setPollInterval,\r\n    showHiddenTypes: showHiddenTypes,\r\n    setShowHiddenTypes: setShowHiddenTypes,\r\n    timeSinceFormat: timeSinceFormat,\r\n    setTimeSinceFormat: setTimeSinceFormat,\r\n    allowOfflineChanges: allowOfflineChanges,\r\n    setAllowOfflineChanges: setAllowOfflineChanges,\r\n    offlineOnly: offlineOnly,\r\n    setOfflineOnly: setOfflineOnly\r\n  };\r\n}\r\n\r\nexport default useSettings;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n/**\r\n * Form Selector for Event Types. Adds a default value (empty string) as the first option.\r\n * @param {Object} props - properties for the component\r\n * @param {{id:string, name:string}[]} props.evtTypes - Array of event types\r\n * @param {string} props.value - The selected value (id of event type)\r\n * @param {(evtType:{id:string, name:string})=>void} props.onChange - The function to run when the value changes\r\n * @param {string} [props.defaultLabel=\"Create New\"] - The label to show for the default value (defaults to 'Create New')\r\n * @param {string} [props.description] - An optional description to display below the field\r\n * @param {boolean} [props.inline] - Make the form group one line. Defaults to false\r\n * @param {boolean} [props.nofilter] - Don't filter out hidden event types\r\n */\r\nfunction EventTypeSelector(props) {\r\n  const defaultLabel = props.defaultLabel || 'Create New';\r\n  let evtTypes = props.evtTypes.map(evt => {\r\n    return (\r\n      (props.nofilter || !evt.hidden) && (\r\n        <option value={evt.id} key={evt.id}>\r\n          {evt.name}\r\n        </option>\r\n      )\r\n    );\r\n  });\r\n\r\n  function handleChange(evt) {\r\n    let type = props.evtTypes.find(t => t.id === evt.target.value);\r\n    props.onChange(type || {});\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId=\"chooseType\" {...(props.inline && { as: Row })}>\r\n      <Form.Label {...(props.inline && { column: true, xs: 'auto' })}>\r\n        Event Type\r\n      </Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        value={props.value}\r\n        onChange={handleChange}\r\n        {...(props.inline && {\r\n          className: 'col mx-3',\r\n          style: { minWidth: '9rem' }\r\n        })}\r\n      >\r\n        <option value=\"\">{`--- ${defaultLabel} ---`}</option>\r\n        {evtTypes}\r\n      </Form.Control>\r\n      {props.description && (\r\n        <Form.Text as=\"small\" className=\"text-muted\">\r\n          {props.description}\r\n        </Form.Text>\r\n      )}\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default EventTypeSelector;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n/**\r\n * Creates a responsive, inline form group.\r\n * @param {Object} props - the props object for InlineFormGroup\r\n * @param {string} props.controlId - the id for the control\r\n * @param {string} props.label - The label for the form group\r\n * @param {React.ReactNode} props.children - The control element for the form group (this is set by adding a control inside this element, not by passing it as a prop)\r\n * @param {string} [props.className] - Class(es) to apply to the form group\r\n * @param {Object} [props.style] - Style object to apply to the form group\r\n */\r\nfunction InlineFormGroup(props) {\r\n  let firstChild = React.Children.toArray(props.children)[0]; // if more than one child is passed, only keep the first\r\n  if (!firstChild)\r\n    firstChild = React.createElement(\r\n      'text',\r\n      null,\r\n      'No children specified for the InlineFormGroup'\r\n    );\r\n  const control = React.cloneElement(firstChild, {\r\n    className: ('col mx-3 ' + firstChild.props.className).trim()\r\n  });\r\n  return (\r\n    <Form.Group\r\n      as={Row}\r\n      controlId={props.controlId}\r\n      style={props.style}\r\n      className={props.className}\r\n    >\r\n      <Form.Label column xs=\"auto\">\r\n        {props.label}\r\n      </Form.Label>\r\n      {control}\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default InlineFormGroup;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nfunction PageHeading(props) {\r\n  let alerts = [];\r\n  if (props.alerts)\r\n    alerts = props.alerts.map(alert => {\r\n      return (\r\n        alert.text && (\r\n          <Alert\r\n            variant={alert.type || 'info'}\r\n            dismissible={!!alert.dismissible}\r\n            onClose={alert.onClose || null}\r\n          >\r\n            {alert.text}\r\n          </Alert>\r\n        )\r\n      );\r\n    });\r\n  return (\r\n    <>\r\n      {alerts}\r\n      <h3 className=\"my-3\">{props.children}</h3>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageHeading;\r\n","import React from 'react';\r\nimport '../styles/Table.css';\r\n\r\n/**\r\n * Returns one row of a table for an event.\r\n * @param {Object} props - Properties for the TableRow\r\n * @param {boolean} props.noDate - set true to not render the Date column\r\n * @param {boolean} props.noBtn - set true to not render the delete button column\r\n * @param {string} props.formatting - JSON serialization of Object containing the properties for the row (e.g. className, style, etc)\r\n * @param {string} props.date - date of the event\r\n * @param {string} props.time - time of the event\r\n * @param {string} props.event - name of the event\r\n * @param {string} [props.timeSince] - time since the event occurred\r\n * @param {(evt:React.MouseEvent<HTMLButtonElement, MouseEvent>)=>void} props.onDelete - function to run when the delete button is clicked\r\n */\r\nfunction TableRow(props) {\r\n  return (\r\n    <tr {...(props.formatting && JSON.parse(props.formatting))}>\r\n      {!props.noDate && <td className=\"small-col\">{props.date}</td>}\r\n      <td className=\"small-col\">{props.time}</td>\r\n      <td className=\"big-col\">{props.event}</td>\r\n      {!props.noBtn && (\r\n        <td className=\"btn-col\">\r\n          {props.time !== '' && ( // if there's no time, it's probably the placeholder row, so don't render the button\r\n            <button className=\"text-danger symbol\" onClick={props.onDelete}>\r\n              <span>&times;</span>\r\n            </button>\r\n          )}\r\n        </td>\r\n      )}\r\n      {props.timeSince && <td className=\"small-col\">{props.timeSince}</td>}\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableRow;\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport EventTypeSelector from '../components/FormElements/EventTypeSelector';\r\nimport InlineFormGroup from '../components/FormElements/InlineFormGroup';\r\nimport PageHeading from '../components/PageHeading';\r\nimport TableRow from '../components/TableRow';\r\nimport { getHumanReadableTimeSinceDatetime, getLocalIsoDateAndTime, getLocalIsoString, getStartAndEndDatetimes, getWeekNumber, getWeekStartAndEnd } from '../helpers/TimeHelpers';\r\nimport '../styles/Table.css';\r\n\r\nfunction History(props) {\r\n  const [type, setType] = useState('');\r\n  const [startDate, setStartDate] = useState('2000-01-01');\r\n  const [endDate, setEndDate] = useState(\r\n    getLocalIsoString(new Date()).split('T')[0]\r\n  );\r\n  const [groupBy, setGroupBy] = useState('');\r\n\r\n  const eventTypes = {};\r\n  props.evtTypes.forEach(type => {\r\n    eventTypes[type.id] = {\r\n      name: type.name,\r\n      formatting: type.formatting\r\n    };\r\n  });\r\n\r\n  // filter rows and sort descending by date and time\r\n  const [startDatetime, endDatetime] = getStartAndEndDatetimes(\r\n    startDate,\r\n    endDate\r\n  );\r\n  let processedRows = props.rows\r\n    .filter(row => {\r\n      const evtType = type ? row.event === type : true;\r\n      const evtStartDate = startDatetime ? row.datetime >= startDatetime : true;\r\n      const evtEndDate = endDatetime ? row.datetime <= endDatetime : true;\r\n      return evtType && evtStartDate && evtEndDate;\r\n    })\r\n    .sort((row1, row2) => row2.datetime - row1.datetime);\r\n  if (\r\n    props.timeSinceFormat &&\r\n    (typeof props.timeSinceFormat === 'boolean' ||\r\n      props.timeSinceFormat.charAt(0) !== '►')\r\n  )\r\n    processedRows = processedRows.map(row => {\r\n      return {\r\n        timeSince: getHumanReadableTimeSinceDatetime(\r\n          new Date(row.datetime),\r\n          typeof props.timeSinceFormat === 'string' ? props.timeSinceFormat : ''\r\n        ),\r\n        ...row\r\n      };\r\n    });\r\n\r\n  // add grouping rows\r\n  let currentGroup = '';\r\n  const monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ]; // TODO: use internationalization API once it's more supported (https://stackoverflow.com/a/18648314) (https://caniuse.com/#search=intl)\r\n  processedRows.forEach((row, index) => {\r\n    if (groupBy) {\r\n      let date, day;\r\n      switch (groupBy) {\r\n        case 'day':\r\n          date = new Date(row.datetime);\r\n          [day] = getLocalIsoDateAndTime(date);\r\n          if (currentGroup !== day) {\r\n            currentGroup = day;\r\n            processedRows.splice(index, 0, {\r\n              group: date.toDateString()\r\n            });\r\n          }\r\n          break;\r\n        case 'week':\r\n          date = new Date(row.datetime);\r\n          [day] = getLocalIsoDateAndTime(date);\r\n          const [wYear, wNo] = getWeekNumber(day);\r\n          const weekYear = wYear + '-' + wNo;\r\n          if (currentGroup !== weekYear) {\r\n            currentGroup = weekYear;\r\n            const [begin, end] = getWeekStartAndEnd(day);\r\n            processedRows.splice(index, 0, {\r\n              group: `Week of: ${begin.toDateString()} - ${end.toDateString()}`\r\n            });\r\n          }\r\n          break;\r\n        case 'month':\r\n          date = new Date(row.datetime);\r\n          [day] = getLocalIsoDateAndTime(date);\r\n          const monthYear = day.slice(0, 7);\r\n          if (currentGroup !== monthYear) {\r\n            currentGroup = monthYear;\r\n            processedRows.splice(index, 0, {\r\n              group: monthNames[date.getMonth()] + ' ' + day.split('-')[0]\r\n            });\r\n          }\r\n          break;\r\n        case 'year':\r\n          date = new Date(row.datetime);\r\n          [day] = getLocalIsoDateAndTime(date);\r\n          const year = day.split('-')[0];\r\n          if (currentGroup !== year) {\r\n            currentGroup = year;\r\n            processedRows.splice(index, 0, {\r\n              group: year\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  });\r\n\r\n  // convert rows to JSX\r\n  const tableRows = processedRows.map(row => {\r\n    let tableRow;\r\n    if (row.group) {\r\n      tableRow = <GroupRow groupName={row.group} />;\r\n    } else {\r\n      const [date, time] = getLocalIsoDateAndTime(new Date(row.datetime));\r\n      tableRow = (\r\n        <TableRow\r\n          noBtn\r\n          date={date}\r\n          time={time}\r\n          event={eventTypes[row.event].name}\r\n          timeSince={row.timeSince}\r\n          formatting={eventTypes[row.event].formatting}\r\n          key={row.id}\r\n        />\r\n      );\r\n    }\r\n    return tableRow;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PageHeading>Event History</PageHeading>\r\n      <FilterCard\r\n        eventTypes={props.evtTypes}\r\n        typeValue={type}\r\n        typeChange={newType => setType(newType)}\r\n        startDate={startDate}\r\n        startDateChange={newDate => setStartDate(newDate)}\r\n        endDate={endDate}\r\n        endDateChange={newDate => setEndDate(newDate)}\r\n        groupBy={groupBy}\r\n        groupByChange={newGroup => setGroupBy(newGroup)}\r\n      />\r\n      <Table striped bordered size=\"sm\" className=\"mt-2\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"small-col\">Date</th>\r\n            <th className=\"small-col\">Time</th>\r\n            <th className=\"big-col\">Event</th>\r\n            {props.timeSinceFormat &&\r\n              (typeof props.timeSinceFormat === 'boolean' ||\r\n                props.timeSinceFormat.charAt(0) !== '►') && (\r\n                <th className=\"small-col\">Time Since</th>\r\n              )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{tableRows}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction GroupRow(props) {\r\n  return (\r\n    <tr className=\"table-dark\" style={{ fontWeight: 'bold' }}>\r\n      <td colSpan=\"3\">{props.groupName}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction FilterCard(props) {\r\n  return (\r\n    <Card border=\"primary\">\r\n      <Card.Header>Filter Events:</Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <EventTypeSelector\r\n            evtTypes={props.eventTypes}\r\n            value={props.typeValue}\r\n            onChange={newType => props.typeChange(newType.id)}\r\n            defaultLabel=\"Any Event Type\"\r\n            inline\r\n          />\r\n          <InlineFormGroup controlId=\"inputEndDate\" label=\"Newest Date\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              value={props.endDate}\r\n              onChange={newDate => props.endDateChange(newDate.target.value)}\r\n            />\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"inputStartDate\" label=\"Oldest Date\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              value={props.startDate}\r\n              onChange={newDate => props.startDateChange(newDate.target.value)}\r\n            />\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"chooseGrouping\" label=\"Group By\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={props.groupBy}\r\n              // TODO: be more consistent with my anonymous handler function naming and structure\r\n              onChange={evt => props.groupByChange(evt.target.value)}\r\n              style={{ minWidth: '9rem' }}\r\n            >\r\n              <option value=\"\">{'--- None ---'}</option>\r\n              <option value=\"day\">{'Day'}</option>\r\n              <option value=\"week\">{'Week'}</option>\r\n              <option value=\"month\">{'Month & Year'}</option>\r\n              <option value=\"year\">{'Year'}</option>\r\n            </Form.Control>\r\n          </InlineFormGroup>\r\n          {/* TODO: Time range? */}\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Table from 'react-bootstrap/Table';\r\nimport InlineFormGroup from '../components/FormElements/InlineFormGroup';\r\nimport PageHeading from '../components/PageHeading';\r\nimport TableRow from '../components/TableRow';\r\nimport { getLocalIsoDateAndTime, getTodaysStartAndEndDatetimes } from '../helpers/TimeHelpers';\r\nimport '../styles/Modal.css';\r\nimport '../styles/Table.css';\r\n\r\nfunction Home(props) {\r\n  const [updateTime, setUpdateTime] = useState(new Date().toLocaleString());\r\n  const [modalInfo, setModalInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    setUpdateTime(new Date().toLocaleString());\r\n  }, [props.rows, props.evtTypes]);\r\n\r\n  const eventTypes = {};\r\n  props.evtTypes.forEach(type => {\r\n    eventTypes[type.id] = {\r\n      name: type.name,\r\n      formatting: type.formatting\r\n    };\r\n  });\r\n\r\n  const [dayStart, dayEnd] = getTodaysStartAndEndDatetimes();\r\n  let sortedFilteredRows = props.rows\r\n    .filter(row => {\r\n      return dayStart <= row.datetime && row.datetime <= dayEnd;\r\n    })\r\n    .sort(\r\n      (row1, row2) => row2.datetime - row1.datetime // sort descending by date and time\r\n    );\r\n\r\n  // if there are no rows, insert a placeholder row\r\n  if (!sortedFilteredRows.length)\r\n    sortedFilteredRows = [\r\n      {\r\n        evtName: 'No Events yet for today',\r\n        evtFormat:\r\n          '{ ' +\r\n          '  \"className\":\"table-active\", ' +\r\n          '  \"style\": { ' +\r\n          '    \"fontStyle\":\"italic\", ' +\r\n          '    \"textAlign\":\"center\" ' +\r\n          '  }' +\r\n          '}',\r\n        id: '',\r\n        datetime: ''\r\n      }\r\n    ];\r\n\r\n  const tableRows = sortedFilteredRows.map(row => {\r\n    let evtName, evtFormat, evtTime;\r\n    if (row.evtName && row.evtFormat) {\r\n      evtName = row.evtName;\r\n      evtFormat = row.evtFormat;\r\n    } else {\r\n      evtName = eventTypes[row.event].name;\r\n      evtFormat = eventTypes[row.event].formatting;\r\n    }\r\n    evtTime = row.datetime\r\n      ? getLocalIsoDateAndTime(new Date(row.datetime))[1]\r\n      : '';\r\n    return (\r\n      <TableRow\r\n        noDate\r\n        time={evtTime}\r\n        event={evtName}\r\n        formatting={evtFormat}\r\n        onDelete={() =>\r\n          setModalInfo({\r\n            deleteId: row.id,\r\n            text: (\r\n              <>\r\n                {'Are you sure you want to delete '}\r\n                <strong>{evtName}</strong>\r\n                {' at '}\r\n                <strong>{evtTime}</strong>?\r\n              </>\r\n            )\r\n          })\r\n        }\r\n        key={row.id}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PageHeading></PageHeading>\r\n      <h5 className=\"mt-3\">\r\n        {'Page last updated: '}\r\n        <small className=\"text-muted\">{updateTime}</small>\r\n        {!props.offlineOnly && (\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            style={{ float: 'right' }}\r\n            onClick={props.onRefresh}\r\n            title=\"Refresh the event list\"\r\n          >\r\n            Refresh\r\n          </Button>\r\n        )}\r\n      </h5>\r\n      <NewEventCard eventTypes={props.evtTypes} evtClick={props.onNewEvent} />\r\n      <Table striped bordered size=\"sm\" className=\"mt-2\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"small-col\">Time</th>\r\n            <th className=\"big-col\">Event</th>\r\n            <th className=\"symbol\">&times;</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{tableRows}</tbody>\r\n      </Table>\r\n\r\n      <Modal show={!!modalInfo}>\r\n        <Modal.Header>\r\n          <Modal.Title>Are you sure?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{modalInfo.text}</Modal.Body>\r\n        <Modal.Footer className=\"row justify-content-around\">\r\n          <Button\r\n            variant=\"danger\"\r\n            className=\"col-md-3 col-5\"\r\n            onClick={() => {\r\n              props.onDeleteEvent(modalInfo.deleteId);\r\n              setModalInfo('');\r\n            }}\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"col-md-3 col-5\"\r\n            onClick={() => setModalInfo('')}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction NewEventCard(props) {\r\n  const [time, setTime] = useState('');\r\n\r\n  function handleNewEvent(id) {\r\n    props.evtClick(id, time && time);\r\n    setTime('');\r\n  }\r\n\r\n  const eventButtons = props.eventTypes.map(evt => {\r\n    return (\r\n      !evt.hidden && (\r\n        <Button\r\n          variant=\"secondary\"\r\n          title={'New ' + evt.name}\r\n          key={evt.id}\r\n          onClick={() => handleNewEvent(evt.id)}\r\n          style={{ width: '100%' }}\r\n          className=\"col-lg-2 col-md-3 col-sm-4 col-6\"\r\n        >\r\n          {evt.name}\r\n        </Button>\r\n      )\r\n    );\r\n  });\r\n  return (\r\n    <Card border=\"primary\">\r\n      <Card.Header>New Events:</Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <InlineFormGroup controlId=\"inputTime\" label=\"Time (if not now):\">\r\n            <Form.Control\r\n              type=\"time\"\r\n              value={time}\r\n              onChange={newTime => setTime(newTime.target.value)}\r\n            />\r\n          </InlineFormGroup>\r\n          <Row>{eventButtons}</Row>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InlineFormGroup from '../components/FormElements/InlineFormGroup';\nimport PageHeading from '../components/PageHeading';\nimport '../styles/Settings.css';\n\r\nfunction Settings(props) {\r\n  const [showTimeSince, setShowTimeSince] = useState(\r\n    props.timeSinceFormat &&\r\n      (typeof props.timeSinceFormat === 'boolean' ||\r\n        props.timeSinceFormat.charAt(0) !== '►')\r\n  );\r\n\r\n  function handleTimeSinceCheck(newVal) {\r\n    if (newVal) {\r\n      // If checkbox is now checked\r\n      if (props.timeSinceFormat && typeof props.timeSinceFormat === 'string')\r\n        // If there is a format defined\r\n        props.onChangeTimeSinceFormat(\r\n          props.timeSinceFormat.substring(1, props.timeSinceFormat.length - 1)\r\n        );\r\n      else props.onChangeTimeSinceFormat(true); // set value of format to true if one isn't defined\r\n    } else {\r\n      // If checkbox is now unchecked\r\n      if (props.timeSinceFormat && typeof props.timeSinceFormat === 'string')\r\n        // If there is a format defined\r\n        props.onChangeTimeSinceFormat('►' + props.timeSinceFormat + '◄');\r\n      else props.onChangeTimeSinceFormat(false); // set value of format to false if one isn't defined\r\n    }\r\n    setShowTimeSince(newVal);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeading>Settings</PageHeading>\r\n      <Card border=\"primary\" className=\"mb-3\">\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Text>\r\n              <strong>\r\n                NOTE: The settings on this page are saved per device.\r\n              </strong>\r\n            </Form.Text>\r\n            <hr />\r\n            <Form.Group controlId=\"setPollInterval\">\r\n              <Form.Label>Poll Interval (minutes)</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min=\"0\"\r\n                value={props.pollInterval}\r\n                onChange={newVal =>\r\n                  props.onChangePollInterval(newVal.target.value)\r\n                }\r\n                disabled={props.offlineOnly}\r\n              />\r\n              <Form.Text as=\"small\" className=\"text-muted\">\r\n                The data on the main page will automatically refresh this often.\r\n                An interval of 0 disables it.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"setShowHiddenTyeps\">\r\n              <Form.Label>Show Deleted Types</Form.Label>\r\n              <Form.Check\r\n                className=\"text-muted\"\r\n                type=\"checkbox\"\r\n                label=\"Show deleted event types on the type management page\"\r\n                checked={props.showHiddenTypes}\r\n                onChange={evt =>\r\n                  props.onChangeShowHiddenTypes(evt.target.checked)\r\n                }\r\n              />\r\n              <Form.Text as=\"small\" className=\"text-muted\">\r\n                Showing deleted event types on the type management page allows\r\n                you to restore those event types.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"setShowTimeSince\">\r\n              <Form.Label>Show Time Since</Form.Label>\r\n              <Form.Check\r\n                className=\"text-muted\"\r\n                type=\"checkbox\"\r\n                label=\"Show time since an event occurred on the history page\"\r\n                checked={showTimeSince}\r\n                onChange={evt => handleTimeSinceCheck(evt.target.checked)}\r\n              />\r\n              <Form.Text as=\"small\" className=\"text-muted\">\r\n                Enabling this adds a column on the Event History page that shows\r\n                how long ago the event was logged.\r\n              </Form.Text>\r\n              <InlineFormGroup\r\n                controlId=\"inputTimeSinceFormat\"\r\n                label=\"Time Since\"\r\n                className=\"child-inline-form-group\"\r\n              >\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Optionally input format\"\r\n                  value={\r\n                    typeof props.timeSinceFormat === 'boolean'\r\n                      ? ''\r\n                      : props.timeSinceFormat\r\n                  }\r\n                  onChange={evt =>\r\n                    props.onChangeTimeSinceFormat(\r\n                      evt.target.value || showTimeSince\r\n                    )\r\n                  }\r\n                  {...(!showTimeSince && {\r\n                    style: { textDecorationLine: 'line-through' }\r\n                  })}\r\n                  disabled={!showTimeSince}\r\n                />\r\n              </InlineFormGroup>\r\n              <Form.Text as=\"small\" className=\"text-muted ml-4\">\r\n                You may specify a format to display the time difference in. The\r\n                valid placeholders are {'{year}'}, {'{month}'}, {'{week}'},{' '}\r\n                {'{day}'}, {'{hour}'}, {'{minute}'}, {'{second}'}, and{' '}\r\n                {'{millisecond}'}. <br /> For example,{' '}\r\n                <code>{'{year}years, {day}d'}</code> would display the number of\r\n                years and days since the event occured with 'years, ' after the\r\n                number of years and 'd' after the number of days. The default\r\n                format is: <code>{'{year}y{day}d'}</code>.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"setAllowOfflineChanges\">\r\n              <Form.Label>Allow Offline Changes</Form.Label>\r\n              <Form.Check\r\n                className=\"text-muted\"\r\n                type=\"checkbox\"\r\n                label=\"Enable adding events and managing event types when unable to access server\"\r\n                checked={props.allowOfflineChanges}\r\n                onChange={evt =>\r\n                  props.onChangeAllowOfflineChanges(evt.target.checked)\r\n                }\r\n                disabled={props.offlineOnly}\r\n              />\r\n              <Form.Text as=\"small\" className=\"text-muted\">\r\n                Allowing offline changes enables you to log events and manage\r\n                event types even when your device cannot access the server.\r\n                You're device will sync with the server when it next has access.\r\n                If the polling interval is disabled, it will try to access the\r\n                server every 5 minutes.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <hr />\r\n            <Form.Group controlId=\"setOfflineOnly\">\r\n              <Form.Label>Offline Only</Form.Label>\r\n              <Form.Check\r\n                className=\"text-muted\"\r\n                type=\"checkbox\"\r\n                label=\"Never try to interact with server\"\r\n                checked={props.offlineOnly}\r\n                onChange={evt => props.onChangeOfflineOnly(evt.target.checked)}\r\n              />\r\n              <Form.Text as=\"small\" className=\"text-muted\">\r\n                Enabling offline only prevents the app from trying to pull\r\n                changes from the server or push changes to the server. It stores\r\n                all changes locally in the browser cache. When this mode is\r\n                disabled, it will try to sync with the server again, pushing all\r\n                changes that have been made since the mode was enabled.\r\n              </Form.Text>\r\n              <Form.Text as=\"small\" className=\"text-muted\">\r\n                <strong>\r\n                  Note: It will still pull changes to the site itself, just not\r\n                  the data.\r\n                </strong>\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m 4.7733591,41.36263 c -0.1181367,0.118136 -0.3548716,0.35441 -0.4730084,0.590683 -0.5906836,0.708821 -0.7088204,1.652991 -0.5906836,2.598085 0.2362734,0.945093 0.7097434,1.772512 1.5367004,2.245059 1.0632306,0.708821 5.5515035,2.953419 19.7279115,2.953419 14.176408,0 18.664681,-2.244598 19.727912,-2.953419 0.826957,-0.472547 1.300426,-1.299966 1.5367,-2.245059 0.236273,-0.945094 -4.62e-4,-1.888804 -0.473009,-2.715761 -0.236273,-0.236273 -0.35441,-0.354871 -0.590684,-0.473007 -3.662238,2.362734 -8.741656,3.661776 -20.200919,3.661776 -11.222989,0 -16.5386807,-1.417178 -20.2009199,-3.661776 z m 10.7793999,-16.421468 1.062538,2.305051 2.658077,0.353026 -1.948564,1.77205 0.353027,2.481564 -2.125078,-1.062538 -2.30505,1.239051 0.356487,-2.481564 -1.740102,-2.022207 2.449614,-0.102868 z m 15.71112,-3.839444 c 1.240435,0 2.480871,0.35441 3.544102,0.886026 -3.544102,0.35441 -6.378693,3.366897 -6.378693,7.088204 0,3.721307 2.834591,6.733793 6.378693,7.088204 -1.063231,0.531615 -2.303667,0.886025 -3.544102,0.886025 -4.430128,0 -7.97423,-3.544102 -7.97423,-7.974229 0,-4.430128 3.721307,-7.97423 7.97423,-7.97423 z m -7.441549,-9.155596 1.062539,2.30505 2.658076,0.353026 -1.948564,1.772051 0.353027,2.481564 -2.125078,-1.062539 -2.305049,1.239051 0.356487,-2.481563 -1.990258,-1.980514 2.699769,-0.321076 z M 30.881116,0.25012384 c -14.648955,0 -22.3269203,29.88951616 -24.4533812,39.34045516 3.3078282,1.890187 8.2686492,3.071093 18.5465442,3.071093 10.277896,0 15.002903,-1.063231 18.428868,-2.953418 C 39.032088,26.122529 32.770842,11.000566 32.770842,10.882429 v -0.117675 l -0.23535,-0.473009 c -0.118137,-0.3544096 -0.118599,-1.0623061 0.117676,-1.4167163 0.118137,-0.1181368 0.235811,-0.3553341 0.708358,-0.3553341 2.244598,0 2.362735,3.6617774 2.362735,4.8431454 0,1.299504 1.063231,2.245058 2.362735,2.245058 0.945094,0 1.655298,-0.590683 2.009709,-1.181367 1.772051,-3.071555 2.00694,-6.8510064 0.353025,-9.6862884 C 39.268363,2.7319181 36.669817,0.25012384 30.881116,0.25012384 Z\"\n});\n\nvar SvgWizardHat = function SvgWizardHat(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 50 50\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgWizardHat, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/wizard-hat.7796c3e3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InlineFormGroup from '../FormElements/InlineFormGroup';\r\n\r\n/**\r\n * Wizard page for selecting a table row's bootstrap base class.\r\n * @param {FormatWizardPageProps} props - the props object for the Choose Class wizard page\r\n */\r\nfunction ChooseClass(props) {\r\n  const stepName = 'Choose Class';\r\n  const stepDescription =\r\n    'Choosing a class allows you to set a starting point for your formatting.';\r\n  const classPrefix = 'table-';\r\n  const rowClasses = [\r\n    'active',\r\n    'danger',\r\n    'dark',\r\n    'info',\r\n    'light',\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'warning'\r\n  ];\r\n\r\n  const [className, setClassName] = useState(getRowClass());\r\n\r\n  function handleClassChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    let classes =\r\n      (formatting.className && formatting.className.split(' ')) || [];\r\n    classes.forEach((cls, idx) => {\r\n      let index = rowClasses.findIndex(rc => classPrefix + rc === cls);\r\n      if (index !== -1) classes.splice(idx, 1);\r\n    });\r\n    classes.push(newVal);\r\n    const value = classes.join(' ');\r\n    formatting.className = value;\r\n    if (value === '') delete formatting.className;\r\n    props.setFormatting(formatting);\r\n    setClassName(newVal);\r\n  }\r\n\r\n  function getRowClass() {\r\n    let classes =\r\n      (props.formatting.className && props.formatting.className.split(' ')) ||\r\n      [];\r\n    for (let i = 0; i < classes.length; i++) {\r\n      let index = rowClasses.findIndex(rc => classPrefix + rc === classes[i]);\r\n      if (index !== -1) return classes[i];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  const classOptions = rowClasses.map(name => {\r\n    const title = name.charAt(0).toUpperCase() + name.substring(1);\r\n    const value = classPrefix + name;\r\n    return (\r\n      <option key={value} value={value}>\r\n        {title}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    props.steps[props.curStep] === stepName && (\r\n      <>\r\n        <h5>{stepName}</h5>\r\n        <span className=\"form-text\">{stepDescription}</span>\r\n        <Form className=\"mt-3\">\r\n          <InlineFormGroup controlId=\"inputClass\" label=\"Class\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={className}\r\n              onChange={evt => handleClassChange(evt.target.value)}\r\n              style={{ minWidth: '9rem' }}\r\n            >\r\n              <option value=\"\">{'--- None ---'}</option>\r\n              {classOptions}\r\n            </Form.Control>\r\n          </InlineFormGroup>\r\n        </Form>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ChooseClass;\r\n","/**\r\n * Returns whether the specified object is empty or not. (ECMA 7+)   \\\r\n * Source: https://stackoverflow.com/a/32108184\r\n * @param {Object} obj - the object to check.\r\n * @returns {boolean} Returns true if the object is empty, false otherwise.\r\n */\r\nexport const isObjectEmpty = function(obj) {\r\n  // ECMA 7+:\r\n  // because Object.entries(new Date()).length === 0;\r\n  // we have to do some additional check\r\n  return Object.entries(obj).length === 0 && obj.constructor === Object;\r\n};\r\n","class CssColors {\r\n  /**\r\n   * Returns the color object of any CSS-defined colors matching colorValue.\r\n   * @param {string} colorValue - the value of the color to search for. It can be the color name or a hex code (starting with #).\r\n   * @returns The color object matching colorValue, or null if there is no match.\r\n   */\r\n  static findColor(colorValue) {\r\n    let value = colorValue.toLowerCase();\r\n    const index = cssColors.findIndex(color => {\r\n      return color.colorString === value || color.hex.toLowerCase() === value;\r\n    });\r\n    if (index !== -1) return cssColors[index];\r\n    else return null;\r\n  }\r\n\r\n  /**\r\n   * Returns the name of any CSS-defined colors matching colorValue.\r\n   * @param {string} colorValue - the value of the color to search for. It can be the color name or a hex code (starting with #).\r\n   * @returns {string} The name of the color matching colorValue, or empty string if there is no match.\r\n   */\r\n  static findName(colorValue) {\r\n    const color = CssColors.findColor(colorValue);\r\n    if (color) return color.name;\r\n    else return '';\r\n  }\r\n}\r\n\r\n/**\r\n * An array of all CSS-defined colors.  \\\r\n * Source: I did a regex replace on the html source of https://www.quackit.com/css/css_color_codes.cfm\r\n */\r\nexport const cssColors = [\r\n  {\r\n    category: 'Reds',\r\n    name: 'IndianRed',\r\n    colorString: 'indianred',\r\n    textColor: 'white',\r\n    hex: '#CD5C5C',\r\n    rgb: { r: 205, g: 92, b: 92 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'LightCoral',\r\n    colorString: 'lightcoral',\r\n    textColor: 'black',\r\n    hex: '#F08080',\r\n    rgb: { r: 240, g: 128, b: 128 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'Salmon',\r\n    colorString: 'salmon',\r\n    textColor: 'black',\r\n    hex: '#FA8072',\r\n    rgb: { r: 250, g: 128, b: 114 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'DarkSalmon',\r\n    colorString: 'darksalmon',\r\n    textColor: 'black',\r\n    hex: '#E9967A',\r\n    rgb: { r: 233, g: 150, b: 122 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'LightSalmon',\r\n    colorString: 'lightsalmon',\r\n    textColor: 'black',\r\n    hex: '#FFA07A',\r\n    rgb: { r: 255, g: 160, b: 122 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'Crimson',\r\n    colorString: 'crimson',\r\n    textColor: 'white',\r\n    hex: '#DC143C',\r\n    rgb: { r: 220, g: 20, b: 60 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'Red',\r\n    colorString: 'red',\r\n    textColor: 'white',\r\n    hex: '#FF0000',\r\n    rgb: { r: 255, g: 0, b: 0 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'FireBrick',\r\n    colorString: 'firebrick',\r\n    textColor: 'white',\r\n    hex: '#B22222',\r\n    rgb: { r: 178, g: 34, b: 34 }\r\n  },\r\n  {\r\n    category: 'Reds',\r\n    name: 'DarkRed',\r\n    colorString: 'darkred',\r\n    textColor: 'white',\r\n    hex: '#8B0000',\r\n    rgb: { r: 139, g: 0, b: 0 }\r\n  },\r\n  {\r\n    category: 'Pinks',\r\n    name: 'Pink',\r\n    colorString: 'pink',\r\n    textColor: 'black',\r\n    hex: '#FFC0CB',\r\n    rgb: { r: 255, g: 192, b: 203 }\r\n  },\r\n  {\r\n    category: 'Pinks',\r\n    name: 'LightPink',\r\n    colorString: 'lightpink',\r\n    textColor: 'black',\r\n    hex: '#FFB6C1',\r\n    rgb: { r: 255, g: 182, b: 193 }\r\n  },\r\n  {\r\n    category: 'Pinks',\r\n    name: 'HotPink',\r\n    colorString: 'hotpink',\r\n    textColor: 'white',\r\n    hex: '#FF69B4',\r\n    rgb: { r: 255, g: 105, b: 180 }\r\n  },\r\n  {\r\n    category: 'Pinks',\r\n    name: 'DeepPink',\r\n    colorString: 'deeppink',\r\n    textColor: 'white',\r\n    hex: '#FF1493',\r\n    rgb: { r: 255, g: 20, b: 147 }\r\n  },\r\n  {\r\n    category: 'Pinks',\r\n    name: 'MediumVioletRed',\r\n    colorString: 'mediumvioletred',\r\n    textColor: 'white',\r\n    hex: '#C71585',\r\n    rgb: { r: 199, g: 21, b: 133 }\r\n  },\r\n  {\r\n    category: 'Pinks',\r\n    name: 'PaleVioletRed',\r\n    colorString: 'palevioletred',\r\n    textColor: 'white',\r\n    hex: '#DB7093',\r\n    rgb: { r: 219, g: 112, b: 147 }\r\n  },\r\n  {\r\n    category: 'Oranges',\r\n    name: 'Coral',\r\n    colorString: 'coral',\r\n    textColor: 'white',\r\n    hex: '#FF7F50',\r\n    rgb: { r: 255, g: 127, b: 80 }\r\n  },\r\n  {\r\n    category: 'Oranges',\r\n    name: 'Tomato',\r\n    colorString: 'tomato',\r\n    textColor: 'white',\r\n    hex: '#FF6347',\r\n    rgb: { r: 255, g: 99, b: 71 }\r\n  },\r\n  {\r\n    category: 'Oranges',\r\n    name: 'OrangeRed',\r\n    colorString: 'orangered',\r\n    textColor: 'white',\r\n    hex: '#FF4500',\r\n    rgb: { r: 255, g: 69, b: 0 }\r\n  },\r\n  {\r\n    category: 'Oranges',\r\n    name: 'DarkOrange',\r\n    colorString: 'darkorange',\r\n    textColor: 'white',\r\n    hex: '#FF8C00',\r\n    rgb: { r: 255, g: 140, b: 0 }\r\n  },\r\n  {\r\n    category: 'Oranges',\r\n    name: 'Orange',\r\n    colorString: 'orange',\r\n    textColor: 'white',\r\n    hex: '#FFA500',\r\n    rgb: { r: 255, g: 165, b: 0 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'Gold',\r\n    colorString: 'gold',\r\n    textColor: 'black',\r\n    hex: '#FFD700',\r\n    rgb: { r: 255, g: 215, b: 0 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'Yellow',\r\n    colorString: 'yellow',\r\n    textColor: 'black',\r\n    hex: '#FFFF00',\r\n    rgb: { r: 255, g: 255, b: 0 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'LightYellow',\r\n    colorString: 'lightyellow',\r\n    textColor: 'black',\r\n    hex: '#FFFFE0',\r\n    rgb: { r: 255, g: 255, b: 224 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'LemonChiffon',\r\n    colorString: 'lemonchiffon',\r\n    textColor: 'black',\r\n    hex: '#FFFACD',\r\n    rgb: { r: 255, g: 250, b: 205 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'LightGoldenrodYellow',\r\n    colorString: 'lightgoldenrodyellow',\r\n    textColor: 'black',\r\n    hex: '#FAFAD2',\r\n    rgb: { r: 250, g: 250, b: 210 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'PapayaWhip',\r\n    colorString: 'papayawhip',\r\n    textColor: 'black',\r\n    hex: '#FFEFD5',\r\n    rgb: { r: 255, g: 239, b: 213 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'Moccasin',\r\n    colorString: 'moccasin',\r\n    textColor: 'black',\r\n    hex: '#FFE4B5',\r\n    rgb: { r: 255, g: 228, b: 181 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'PeachPuff',\r\n    colorString: 'peachpuff',\r\n    textColor: 'black',\r\n    hex: '#FFDAB9',\r\n    rgb: { r: 255, g: 218, b: 185 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'PaleGoldenrod',\r\n    colorString: 'palegoldenrod',\r\n    textColor: 'black',\r\n    hex: '#EEE8AA',\r\n    rgb: { r: 238, g: 232, b: 170 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'Khaki',\r\n    colorString: 'khaki',\r\n    textColor: 'black',\r\n    hex: '#F0E68C',\r\n    rgb: { r: 240, g: 230, b: 140 }\r\n  },\r\n  {\r\n    category: 'Yellows',\r\n    name: 'DarkKhaki',\r\n    colorString: 'darkkhaki',\r\n    textColor: 'white',\r\n    hex: '#BDB76B',\r\n    rgb: { r: 189, g: 183, b: 107 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Lavender',\r\n    colorString: 'lavender',\r\n    textColor: 'black',\r\n    hex: '#E6E6FA',\r\n    rgb: { r: 230, g: 230, b: 250 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Thistle',\r\n    colorString: 'thistle',\r\n    textColor: 'white',\r\n    hex: '#D8BFD8',\r\n    rgb: { r: 216, g: 191, b: 216 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Plum',\r\n    colorString: 'plum',\r\n    textColor: 'white',\r\n    hex: '#DDA0DD',\r\n    rgb: { r: 221, g: 160, b: 221 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Violet',\r\n    colorString: 'violet',\r\n    textColor: 'white',\r\n    hex: '#EE82EE',\r\n    rgb: { r: 238, g: 130, b: 238 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Orchid',\r\n    colorString: 'orchid',\r\n    textColor: 'white',\r\n    hex: '#DA70D6',\r\n    rgb: { r: 218, g: 112, b: 214 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Magenta',\r\n    colorString: 'magenta',\r\n    textColor: 'white',\r\n    hex: '#FF00FF',\r\n    rgb: { r: 255, g: 0, b: 255 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Fuchsia',\r\n    colorString: 'fuchsia',\r\n    textColor: 'white',\r\n    hex: '#FF00FF',\r\n    rgb: { r: 255, g: 0, b: 255 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'MediumOrchid',\r\n    colorString: 'mediumorchid',\r\n    textColor: 'white',\r\n    hex: '#BA55D3',\r\n    rgb: { r: 186, g: 85, b: 211 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'MediumPurple',\r\n    colorString: 'mediumpurple',\r\n    textColor: 'white',\r\n    hex: '#9370DB',\r\n    rgb: { r: 147, g: 112, b: 219 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'BlueViolet',\r\n    colorString: 'blueviolet',\r\n    textColor: 'white',\r\n    hex: '#8A2BE2',\r\n    rgb: { r: 138, g: 43, b: 226 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'DarkViolet',\r\n    colorString: 'darkviolet',\r\n    textColor: 'white',\r\n    hex: '#9400D3',\r\n    rgb: { r: 148, g: 0, b: 211 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'DarkOrchid',\r\n    colorString: 'darkorchid',\r\n    textColor: 'white',\r\n    hex: '#9932CC',\r\n    rgb: { r: 153, g: 50, b: 204 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'DarkMagenta',\r\n    colorString: 'darkmagenta',\r\n    textColor: 'white',\r\n    hex: '#8B008B',\r\n    rgb: { r: 139, g: 0, b: 139 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Purple',\r\n    colorString: 'purple',\r\n    textColor: 'white',\r\n    hex: '#800080',\r\n    rgb: { r: 128, g: 0, b: 128 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'RebeccaPurple',\r\n    colorString: 'rebeccapurple',\r\n    textColor: 'white',\r\n    hex: '#663399',\r\n    rgb: { r: 102, g: 51, b: 153 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'Indigo',\r\n    colorString: 'indigo',\r\n    textColor: 'white',\r\n    hex: '#4B0082',\r\n    rgb: { r: 75, g: 0, b: 130 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'MediumSlateBlue',\r\n    colorString: 'mediumslateblue',\r\n    textColor: 'white',\r\n    hex: '#7B68EE',\r\n    rgb: { r: 123, g: 104, b: 238 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'SlateBlue',\r\n    colorString: 'slateblue',\r\n    textColor: 'white',\r\n    hex: '#6A5ACD',\r\n    rgb: { r: 106, g: 90, b: 205 }\r\n  },\r\n  {\r\n    category: 'Purples',\r\n    name: 'DarkSlateBlue',\r\n    colorString: 'darkslateblue',\r\n    textColor: 'white',\r\n    hex: '#483D8B',\r\n    rgb: { r: 72, g: 61, b: 139 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'GreenYellow',\r\n    colorString: 'greenyellow',\r\n    textColor: 'black',\r\n    hex: '#ADFF2F',\r\n    rgb: { r: 173, g: 255, b: 47 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'Chartreuse',\r\n    colorString: 'chartreuse',\r\n    textColor: 'black',\r\n    hex: '#7FFF00',\r\n    rgb: { r: 127, g: 255, b: 0 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'LawnGreen',\r\n    colorString: 'lawngreen',\r\n    textColor: 'black',\r\n    hex: '#7CFC00',\r\n    rgb: { r: 124, g: 252, b: 0 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'Lime',\r\n    colorString: 'lime',\r\n    textColor: 'black',\r\n    hex: '#00FF00',\r\n    rgb: { r: 0, g: 255, b: 0 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'LimeGreen',\r\n    colorString: 'limegreen',\r\n    textColor: 'black',\r\n    hex: '#32CD32',\r\n    rgb: { r: 50, g: 205, b: 50 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'PaleGreen',\r\n    colorString: 'palegreen',\r\n    textColor: 'black',\r\n    hex: '#98FB98',\r\n    rgb: { r: 152, g: 251, b: 152 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'LightGreen',\r\n    colorString: 'lightgreen',\r\n    textColor: 'black',\r\n    hex: '#90EE90',\r\n    rgb: { r: 144, g: 238, b: 144 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'MediumSpringGreen',\r\n    colorString: 'mediumspringgreen',\r\n    textColor: 'black',\r\n    hex: '#00FA9A',\r\n    rgb: { r: 0, g: 250, b: 154 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'SpringGreen',\r\n    colorString: 'springgreen',\r\n    textColor: 'black',\r\n    hex: '#00FF7F',\r\n    rgb: { r: 0, g: 255, b: 127 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'MediumSeaGreen',\r\n    colorString: 'mediumseagreen',\r\n    textColor: 'white',\r\n    hex: '#3CB371',\r\n    rgb: { r: 60, g: 179, b: 113 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'SeaGreen',\r\n    colorString: 'seagreen',\r\n    textColor: 'white',\r\n    hex: '#2E8B57',\r\n    rgb: { r: 46, g: 139, b: 87 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'ForestGreen',\r\n    colorString: 'forestgreen',\r\n    textColor: 'white',\r\n    hex: '#228B22',\r\n    rgb: { r: 34, g: 139, b: 34 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'Green',\r\n    colorString: 'green',\r\n    textColor: 'white',\r\n    hex: '#008000',\r\n    rgb: { r: 0, g: 128, b: 0 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'DarkGreen',\r\n    colorString: 'darkgreen',\r\n    textColor: 'white',\r\n    hex: '#006400',\r\n    rgb: { r: 0, g: 100, b: 0 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'YellowGreen',\r\n    colorString: 'yellowgreen',\r\n    textColor: 'white',\r\n    hex: '#9ACD32',\r\n    rgb: { r: 154, g: 205, b: 50 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'OliveDrab',\r\n    colorString: 'olivedrab',\r\n    textColor: 'white',\r\n    hex: '#6B8E23',\r\n    rgb: { r: 107, g: 142, b: 35 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'Olive',\r\n    colorString: 'olive',\r\n    textColor: 'white',\r\n    hex: '#808000',\r\n    rgb: { r: 128, g: 128, b: 0 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'DarkOliveGreen',\r\n    colorString: 'darkolivegreen',\r\n    textColor: 'white',\r\n    hex: '#556B2F',\r\n    rgb: { r: 85, g: 107, b: 47 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'MediumAquamarine',\r\n    colorString: 'mediumaquamarine',\r\n    textColor: 'black',\r\n    hex: '#66CDAA',\r\n    rgb: { r: 102, g: 205, b: 170 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'DarkSeaGreen',\r\n    colorString: 'darkseagreen',\r\n    textColor: 'white',\r\n    hex: '#8FBC8F',\r\n    rgb: { r: 143, g: 188, b: 143 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'LightSeaGreen',\r\n    colorString: 'lightseagreen',\r\n    textColor: 'white',\r\n    hex: '#20B2AA',\r\n    rgb: { r: 32, g: 178, b: 170 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'DarkCyan',\r\n    colorString: 'darkcyan',\r\n    textColor: 'white',\r\n    hex: '#008B8B',\r\n    rgb: { r: 0, g: 139, b: 139 }\r\n  },\r\n  {\r\n    category: 'Greens',\r\n    name: 'Teal',\r\n    colorString: 'teal',\r\n    textColor: 'white',\r\n    hex: '#008080',\r\n    rgb: { r: 0, g: 128, b: 128 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'Cyan',\r\n    colorString: 'cyan',\r\n    textColor: 'black',\r\n    hex: '#00FFFF',\r\n    rgb: { r: 0, g: 255, b: 255 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'Aqua',\r\n    colorString: 'aqua',\r\n    textColor: 'black',\r\n    hex: '#00FFFF',\r\n    rgb: { r: 0, g: 255, b: 255 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'LightCyan',\r\n    colorString: 'lightcyan',\r\n    textColor: 'black',\r\n    hex: '#E0FFFF',\r\n    rgb: { r: 224, g: 255, b: 255 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'PaleTurquoise',\r\n    colorString: 'paleturquoise',\r\n    textColor: 'black',\r\n    hex: '#AFEEEE',\r\n    rgb: { r: 175, g: 238, b: 238 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'Aquamarine',\r\n    colorString: 'aquamarine',\r\n    textColor: 'black',\r\n    hex: '#7FFFD4',\r\n    rgb: { r: 127, g: 255, b: 212 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'Turquoise',\r\n    colorString: 'turquoise',\r\n    textColor: 'black',\r\n    hex: '#40E0D0',\r\n    rgb: { r: 64, g: 224, b: 208 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'MediumTurquoise',\r\n    colorString: 'mediumturquoise',\r\n    textColor: 'white',\r\n    hex: '#48D1CC',\r\n    rgb: { r: 72, g: 209, b: 204 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'DarkTurquoise',\r\n    colorString: 'darkturquoise',\r\n    textColor: 'white',\r\n    hex: '#00CED1',\r\n    rgb: { r: 0, g: 206, b: 209 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'CadetBlue',\r\n    colorString: 'cadetblue',\r\n    textColor: 'white',\r\n    hex: '#5F9EA0',\r\n    rgb: { r: 95, g: 158, b: 160 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'SteelBlue',\r\n    colorString: 'steelblue',\r\n    textColor: 'white',\r\n    hex: '#4682B4',\r\n    rgb: { r: 70, g: 130, b: 180 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'LightSteelBlue',\r\n    colorString: 'lightsteelblue',\r\n    textColor: 'black',\r\n    hex: '#B0C4DE',\r\n    rgb: { r: 176, g: 196, b: 222 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'PowderBlue',\r\n    colorString: 'powderblue',\r\n    textColor: 'black',\r\n    hex: '#B0E0E6',\r\n    rgb: { r: 176, g: 224, b: 230 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'LightBlue',\r\n    colorString: 'lightblue',\r\n    textColor: 'black',\r\n    hex: '#ADD8E6',\r\n    rgb: { r: 173, g: 216, b: 230 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'SkyBlue',\r\n    colorString: 'skyblue',\r\n    textColor: 'black',\r\n    hex: '#87CEEB',\r\n    rgb: { r: 135, g: 206, b: 235 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'LightSkyBlue',\r\n    colorString: 'lightskyblue',\r\n    textColor: 'black',\r\n    hex: '#87CEFA',\r\n    rgb: { r: 135, g: 206, b: 250 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'DeepSkyBlue',\r\n    colorString: 'deepskyblue',\r\n    textColor: 'white',\r\n    hex: '#00BFFF',\r\n    rgb: { r: 0, g: 191, b: 255 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'DodgerBlue',\r\n    colorString: 'dodgerblue',\r\n    textColor: 'white',\r\n    hex: '#1E90FF',\r\n    rgb: { r: 30, g: 144, b: 255 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'CornflowerBlue',\r\n    colorString: 'cornflowerblue',\r\n    textColor: 'white',\r\n    hex: '#6495ED',\r\n    rgb: { r: 100, g: 149, b: 237 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'RoyalBlue',\r\n    colorString: 'royalblue',\r\n    textColor: 'white',\r\n    hex: '#4169E1',\r\n    rgb: { r: 65, g: 105, b: 225 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'Blue',\r\n    colorString: 'blue',\r\n    textColor: 'white',\r\n    hex: '#0000FF',\r\n    rgb: { r: 0, g: 0, b: 255 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'MediumBlue',\r\n    colorString: 'mediumblue',\r\n    textColor: 'white',\r\n    hex: '#0000CD',\r\n    rgb: { r: 0, g: 0, b: 205 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'DarkBlue',\r\n    colorString: 'darkblue',\r\n    textColor: 'white',\r\n    hex: '#00008B',\r\n    rgb: { r: 0, g: 0, b: 139 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'Navy',\r\n    colorString: 'navy',\r\n    textColor: 'white',\r\n    hex: '#000080',\r\n    rgb: { r: 0, g: 0, b: 128 }\r\n  },\r\n  {\r\n    category: 'Blues/Cyans',\r\n    name: 'MidnightBlue',\r\n    colorString: 'midnightblue',\r\n    textColor: 'white',\r\n    hex: '#191970',\r\n    rgb: { r: 25, g: 25, b: 112 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Cornsilk',\r\n    colorString: 'cornsilk',\r\n    textColor: 'black',\r\n    hex: '#FFF8DC',\r\n    rgb: { r: 255, g: 248, b: 220 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'BlanchedAlmond',\r\n    colorString: 'blanchedalmond',\r\n    textColor: 'black',\r\n    hex: '#FFEBCD',\r\n    rgb: { r: 255, g: 235, b: 205 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Bisque',\r\n    colorString: 'bisque',\r\n    textColor: 'black',\r\n    hex: '#FFE4C4',\r\n    rgb: { r: 255, g: 228, b: 196 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'NavajoWhite',\r\n    colorString: 'navajowhite',\r\n    textColor: 'black',\r\n    hex: '#FFDEAD',\r\n    rgb: { r: 255, g: 222, b: 173 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Wheat',\r\n    colorString: 'wheat',\r\n    textColor: 'black',\r\n    hex: '#F5DEB3',\r\n    rgb: { r: 245, g: 222, b: 179 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'BurlyWood',\r\n    colorString: 'burlywood',\r\n    textColor: 'white',\r\n    hex: '#DEB887',\r\n    rgb: { r: 222, g: 184, b: 135 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Tan',\r\n    colorString: 'tan',\r\n    textColor: 'white',\r\n    hex: '#D2B48C',\r\n    rgb: { r: 210, g: 180, b: 140 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'RosyBrown',\r\n    colorString: 'rosybrown',\r\n    textColor: 'white',\r\n    hex: '#BC8F8F',\r\n    rgb: { r: 188, g: 143, b: 143 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'SandyBrown',\r\n    colorString: 'sandybrown',\r\n    textColor: 'white',\r\n    hex: '#F4A460',\r\n    rgb: { r: 244, g: 164, b: 96 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Goldenrod',\r\n    colorString: 'goldenrod',\r\n    textColor: 'white',\r\n    hex: '#DAA520',\r\n    rgb: { r: 218, g: 165, b: 32 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'DarkGoldenrod',\r\n    colorString: 'darkgoldenrod',\r\n    textColor: 'white',\r\n    hex: '#B8860B',\r\n    rgb: { r: 184, g: 134, b: 11 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Peru',\r\n    colorString: 'peru',\r\n    textColor: 'white',\r\n    hex: '#CD853F',\r\n    rgb: { r: 205, g: 133, b: 63 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Chocolate',\r\n    colorString: 'chocolate',\r\n    textColor: 'white',\r\n    hex: '#D2691E',\r\n    rgb: { r: 210, g: 105, b: 30 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'SaddleBrown',\r\n    colorString: 'saddlebrown',\r\n    textColor: 'white',\r\n    hex: '#8B4513',\r\n    rgb: { r: 139, g: 69, b: 19 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Sienna',\r\n    colorString: 'sienna',\r\n    textColor: 'white',\r\n    hex: '#A0522D',\r\n    rgb: { r: 160, g: 82, b: 45 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Brown',\r\n    colorString: 'brown',\r\n    textColor: 'white',\r\n    hex: '#A52A2A',\r\n    rgb: { r: 165, g: 42, b: 42 }\r\n  },\r\n  {\r\n    category: 'Browns',\r\n    name: 'Maroon',\r\n    colorString: 'maroon',\r\n    textColor: 'white',\r\n    hex: '#800000',\r\n    rgb: { r: 128, g: 0, b: 0 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'White',\r\n    colorString: 'white',\r\n    textColor: 'black',\r\n    hex: '#FFFFFF',\r\n    rgb: { r: 255, g: 255, b: 255 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Snow',\r\n    colorString: 'snow',\r\n    textColor: 'black',\r\n    hex: '#FFFAFA',\r\n    rgb: { r: 255, g: 250, b: 250 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Honeydew',\r\n    colorString: 'honeydew',\r\n    textColor: 'black',\r\n    hex: '#F0FFF0',\r\n    rgb: { r: 240, g: 255, b: 240 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'MintCream',\r\n    colorString: 'mintcream',\r\n    textColor: 'black',\r\n    hex: '#F5FFFA',\r\n    rgb: { r: 245, g: 255, b: 250 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Azure',\r\n    colorString: 'azure',\r\n    textColor: 'black',\r\n    hex: '#F0FFFF',\r\n    rgb: { r: 240, g: 255, b: 255 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'AliceBlue',\r\n    colorString: 'aliceblue',\r\n    textColor: 'black',\r\n    hex: '#F0F8FF',\r\n    rgb: { r: 240, g: 248, b: 255 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'GhostWhite',\r\n    colorString: 'ghostwhite',\r\n    textColor: 'black',\r\n    hex: '#F8F8FF',\r\n    rgb: { r: 248, g: 248, b: 255 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'WhiteSmoke',\r\n    colorString: 'whitesmoke',\r\n    textColor: 'black',\r\n    hex: '#F5F5F5',\r\n    rgb: { r: 245, g: 245, b: 245 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Seashell',\r\n    colorString: 'seashell',\r\n    textColor: 'black',\r\n    hex: '#FFF5EE',\r\n    rgb: { r: 255, g: 245, b: 238 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Beige',\r\n    colorString: 'beige',\r\n    textColor: 'black',\r\n    hex: '#F5F5DC',\r\n    rgb: { r: 245, g: 245, b: 220 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'OldLace',\r\n    colorString: 'oldlace',\r\n    textColor: 'black',\r\n    hex: '#FDF5E6',\r\n    rgb: { r: 253, g: 245, b: 230 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'FloralWhite',\r\n    colorString: 'floralwhite',\r\n    textColor: 'black',\r\n    hex: '#FFFAF0',\r\n    rgb: { r: 255, g: 250, b: 240 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Ivory',\r\n    colorString: 'ivory',\r\n    textColor: 'black',\r\n    hex: '#FFFFF0',\r\n    rgb: { r: 255, g: 255, b: 240 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'AntiqueWhite',\r\n    colorString: 'antiquewhite',\r\n    textColor: 'black',\r\n    hex: '#FAEBD7',\r\n    rgb: { r: 250, g: 235, b: 215 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'Linen',\r\n    colorString: 'linen',\r\n    textColor: 'black',\r\n    hex: '#FAF0E6',\r\n    rgb: { r: 250, g: 240, b: 230 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'LavenderBlush',\r\n    colorString: 'lavenderblush',\r\n    textColor: 'black',\r\n    hex: '#FFF0F5',\r\n    rgb: { r: 255, g: 240, b: 245 }\r\n  },\r\n  {\r\n    category: 'Whites',\r\n    name: 'MistyRose',\r\n    colorString: 'mistyrose',\r\n    textColor: 'black',\r\n    hex: '#FFE4E1',\r\n    rgb: { r: 255, g: 228, b: 225 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'Gainsboro',\r\n    colorString: 'gainsboro',\r\n    textColor: 'black',\r\n    hex: '#DCDCDC',\r\n    rgb: { r: 220, g: 220, b: 220 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'LightGrey',\r\n    colorString: 'lightgrey',\r\n    textColor: 'black',\r\n    hex: '#D3D3D3',\r\n    rgb: { r: 211, g: 211, b: 211 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'LightGray',\r\n    colorString: 'lightgrey',\r\n    textColor: 'black',\r\n    hex: '#D3D3D3',\r\n    rgb: { r: 211, g: 211, b: 211 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'Silver',\r\n    colorString: 'silver',\r\n    textColor: 'black',\r\n    hex: '#C0C0C0',\r\n    rgb: { r: 192, g: 192, b: 192 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'DarkGrey',\r\n    colorString: 'darkgrey',\r\n    textColor: 'black',\r\n    hex: '#A9A9A9',\r\n    rgb: { r: 169, g: 169, b: 169 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'DarkGray',\r\n    colorString: 'darkgray',\r\n    textColor: 'black',\r\n    hex: '#A9A9A9',\r\n    rgb: { r: 169, g: 169, b: 169 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'Grey',\r\n    colorString: 'grey',\r\n    textColor: 'black',\r\n    hex: '#808080',\r\n    rgb: { r: 128, g: 128, b: 128 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'Gray',\r\n    colorString: 'gray',\r\n    textColor: 'black',\r\n    hex: '#808080',\r\n    rgb: { r: 128, g: 128, b: 128 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'DimGrey',\r\n    colorString: 'dimgrey',\r\n    textColor: 'white',\r\n    hex: '#696969',\r\n    rgb: { r: 105, g: 105, b: 105 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'DimGray',\r\n    colorString: 'dimgray',\r\n    textColor: 'white',\r\n    hex: '#696969',\r\n    rgb: { r: 105, g: 105, b: 105 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'LightSlateGrey',\r\n    colorString: 'lightslategrey',\r\n    textColor: 'white',\r\n    hex: '#778899',\r\n    rgb: { r: 119, g: 136, b: 153 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'LightSlateGray',\r\n    colorString: 'lightslategray',\r\n    textColor: 'white',\r\n    hex: '#778899',\r\n    rgb: { r: 119, g: 136, b: 153 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'SlateGrey',\r\n    colorString: 'slategrey',\r\n    textColor: 'white',\r\n    hex: '#708090',\r\n    rgb: { r: 112, g: 128, b: 144 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'SlateGray',\r\n    colorString: 'slategray',\r\n    textColor: 'white',\r\n    hex: '#708090',\r\n    rgb: { r: 112, g: 128, b: 144 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'DarkSlateGrey',\r\n    colorString: 'darkslategrey',\r\n    textColor: 'white',\r\n    hex: '#2F4F4F',\r\n    rgb: { r: 47, g: 79, b: 79 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'DarkSlateGray',\r\n    colorString: 'darkslategray',\r\n    textColor: 'white',\r\n    hex: '#2F4F4F',\r\n    rgb: { r: 47, g: 79, b: 79 }\r\n  },\r\n  {\r\n    category: 'Greys',\r\n    name: 'Black',\r\n    colorString: 'black',\r\n    textColor: 'white',\r\n    hex: '#000000',\r\n    rgb: { r: 0, g: 0, b: 0 }\r\n  }\r\n];\r\n\r\nexport default CssColors;\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../../styles/CustomSelect.css';\r\n\r\n/**\r\n * A custom selector that lets you choose one of a few pre-defined items.\r\n * @template OBJ - the list item object\r\n * @template VAL - the type of the item's value\r\n * @param {Object} props - properties object for CustomSelect\r\n * @param {VAL} props.value - The value of the selector\r\n * @param {Array<{name:string, props:FormattingObject, object:OBJ}>} props.items - The list of objects needed to generate the option list\r\n * @param {(item:OBJ, filter:string) => boolean} props.filter - Returns whether the item should be included based on the filter text (filter text is converted to all lowercase before it's passed).\r\n * @param {(itemList:Array<{name:string, props:FormattingObject, object:OBJ}>) => void} [props.insertGroups] - Adds group label items to the list of options.\r\n * @param {(itemValue:VAL) => OBJ} props.findItem - Returns the item object that matches the value.\r\n * @param {(itemValue:VAL) => string} props.findItemName - Returns the name of the item matching the value.\r\n * @param {(item:OBJ) => boolean} props.handleSelect - Performs any logic that needs to happen when an item is selected and returns true if the list should be hidden (a valid option was clicked). It is passed an object with emptyString set to true if the value is empty.\r\n */\r\nfunction CustomSelect(props) {\r\n  const [filterText, setFilterText] = useState('');\r\n  const [showList, setShowList] = useState(false);\r\n  const [blurring, setBlurring] = useState(false);\r\n\r\n  // Make sure filter text reflects the current value\r\n  const findItemName = props.findItemName;\r\n  const propValue = props.value;\r\n  useEffect(() => {\r\n    setFilterText(findItemName(propValue));\r\n  }, [findItemName, propValue]);\r\n\r\n  // Make sure to hide the menu when focus leaves the input\r\n  useEffect(() => {\r\n    if (blurring) {\r\n      setShowList(false);\r\n      setBlurring(false);\r\n    }\r\n  }, [blurring, setShowList, setBlurring]);\r\n\r\n  function handleSelect(item) {\r\n    const hideList = props.handleSelect(item);\r\n    setShowList(!hideList);\r\n  }\r\n\r\n  function handleBlur(evt) {\r\n    setBlurring(true);\r\n    let value = evt.target.value.toLowerCase();\r\n    // Handle empty string\r\n    if (!value) {\r\n      handleSelect({ emptyString: true });\r\n      return;\r\n    }\r\n\r\n    // Set value if valid, otherwise reset filterText\r\n    const item = props.findItem(value);\r\n    if (item) handleSelect(item);\r\n    else setFilterText(props.findItemName(props.value));\r\n  }\r\n\r\n  // Generate JSX\r\n  const lowerFilter = filterText.toLowerCase();\r\n  let listItems = props.items.filter(item => {\r\n    return props.filter(item.object, lowerFilter);\r\n  });\r\n  if (props.insertGroups) props.insertGroups(listItems);\r\n  const listOptions = listItems.map(item => {\r\n    return (\r\n      <li\r\n        key={item.name}\r\n        {...item.props}\r\n        onMouseDown={evt => evt.preventDefault()} // Ensures onClick is called before onBlur is called on the input\r\n        onClick={() => handleSelect(item.object)}\r\n      >\r\n        {item.name}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={'custom-select-component' + (showList ? ' show-list' : '')}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={filterText}\r\n          onChange={evt => setFilterText(evt.target.value)}\r\n          onFocus={evt => setShowList(true)}\r\n          onBlur={evt => handleBlur(evt)}\r\n          onKeyDown={evt => {\r\n            if (evt.key === 'Escape') setShowList(false);\r\n          }}\r\n          onClick={evt => setShowList(true)}\r\n        />\r\n        <span\r\n          className=\"arrow\"\r\n          onClick={evt => {\r\n            setShowList(val => !val);\r\n            evt.preventDefault();\r\n          }}\r\n          onMouseDown={evt => evt.preventDefault()}\r\n        >\r\n          {showList ? <>&#128897;</> : <>&#128899;</>}\r\n        </span>\r\n        <ul className=\"dropdown\">{listOptions}</ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;\r\n","import React from 'react';\r\nimport CssColors, { cssColors } from '../../helpers/CssColors';\r\nimport CustomSelect from './CustomSelect';\r\n\r\n/**\r\n * A custom selector that lets you choose one of the CSS-defined colors.\r\n * @param {Object} props - properties object for CssColorSelect\r\n * @param {(colorValue:string) => void} props.onChange - function to call when a color is chosen\r\n * @param {string} props.value - The value of the selector\r\n */\r\nfunction CssColorSelect(props) {\r\n  function handleSelect(color) {\r\n    if (color.colorString !== undefined) {\r\n      props.onChange(color.colorString);\r\n      return true;\r\n    } else if (props.emptyString) {\r\n      props.onChange('');\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function filter(color, lowerCaseFilterText) {\r\n    const colorStringMatches =\r\n      color.colorString.indexOf(lowerCaseFilterText) !== -1;\r\n    const categoryMatches =\r\n      color.category.toLowerCase().indexOf(lowerCaseFilterText) !== -1;\r\n    return colorStringMatches || categoryMatches;\r\n  }\r\n\r\n  function insertGroups(colorItems) {\r\n    let lastGroup = '';\r\n    colorItems.forEach((colorItem, index) => {\r\n      if (colorItem.object.category !== lastGroup) {\r\n        lastGroup = colorItem.object.category;\r\n        colorItems.splice(index, 0, {\r\n          name: lastGroup,\r\n          props: {\r\n            className: 'entry',\r\n            style: {\r\n              color: 'white',\r\n              backgroundColor: 'black',\r\n              borderColor: 'white',\r\n              fontWeight: 'bold',\r\n              textAlign: 'center',\r\n              textDecorationLine: 'underline',\r\n              borderStyle: 'none'\r\n            }\r\n          },\r\n          object: { name: lastGroup }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Sort color list by Category then Name\r\n  const options = cssColors.concat([]).sort((c1, c2) => {\r\n    if (c1.category < c2.category) return -1;\r\n    if (c1.category > c2.category) return 1;\r\n    if (c1.colorString < c2.colorString) return -1;\r\n    if (c1.colorString > c2.colorString) return 1;\r\n    return 0;\r\n  });\r\n\r\n  const items = options.map(color => {\r\n    return {\r\n      name: color.name,\r\n      props: {\r\n        className: 'entry',\r\n        style: {\r\n          color: color.textColor,\r\n          backgroundColor: color.colorString,\r\n          borderColor: color.textColor\r\n        }\r\n      },\r\n      object: color\r\n    };\r\n  });\r\n\r\n  return (\r\n    <CustomSelect\r\n      value={props.value}\r\n      items={items}\r\n      handleSelect={handleSelect}\r\n      filter={filter}\r\n      insertGroups={insertGroups}\r\n      findItem={CssColors.findColor}\r\n      findItemName={CssColors.findName}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CssColorSelect;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport CssColors from '../../helpers/CssColors';\r\nimport '../../styles/ColorPicker.css';\r\nimport '../../styles/Modal.css';\r\nimport CssColorSelect from './CssColorSelect';\r\n\r\n/**\r\n * A color picker that allows you to choose one of the CSS-defined colors or a custom one.\r\n * @param {Object} props - properties object for the Color Picker\r\n * @param {string} props.value - value of the color picker\r\n * @param {(colorValue:string) => void} props.onChange - function to call when a color is chosen (saved)\r\n * @param {string} props.className - value to add to the className property of the rendered component\r\n * @param {Object} props.style - style object to apply to the rendered component\r\n */\r\nfunction ColorPicker(props) {\r\n  const defaultName = ' --- No Change ---';\r\n  const previewSize = '1.5em';\r\n\r\n  const [colorName, setColorName] = useState(defaultName);\r\n  const [colorValue, setColorValue] = useState(props.value);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const originalColor = useRef('');\r\n  useEffect(() => {\r\n    setColor(props.value);\r\n  }, [props.value]); // may need to add setColor, or setColorValue and setColorName to the dependency list\r\n\r\n  function handleClick() {\r\n    if (!showPicker) originalColor.current = colorValue;\r\n    setShowPicker(prev => !prev);\r\n  }\r\n\r\n  function handleDismiss(evt) {\r\n    evt.stopPropagation();\r\n    reset();\r\n    setShowPicker(false);\r\n  }\r\n\r\n  function handleSave() {\r\n    props.onChange(colorValue);\r\n    setShowPicker(false);\r\n  }\r\n\r\n  function handleReset() {\r\n    if (originalColor.current !== colorValue) reset();\r\n    else setColor('');\r\n  }\r\n\r\n  function reset() {\r\n    setColor(originalColor.current);\r\n  }\r\n\r\n  function setColor(val) {\r\n    setColorName(CssColors.findName(val) || val.toUpperCase() || defaultName);\r\n    setColorValue(val);\r\n  }\r\n\r\n  function getHexColor(val) {\r\n    if (val.startsWith('#')) return val;\r\n    const color = CssColors.findColor(val);\r\n    return color ? color.hex.toLowerCase() : '#000000';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={props.className + ' control-column'}\r\n      style={{ flexDirection: 'column', ...props.style }}\r\n    >\r\n      <Modal.Dialog\r\n        style={{ display: showPicker ? 'block' : 'none' }}\r\n        className=\"modal-w inline-modal\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Color Picker</Modal.Title>\r\n        </Modal.Header>\r\n        <div style={{ height: '1em', backgroundColor: colorValue }} />\r\n        <Modal.Body>\r\n          <Form.Group controlId=\"inputDefinedColor\">\r\n            <Form.Label>Choose a pre-defined color</Form.Label>\r\n            <CssColorSelect\r\n              value={colorValue}\r\n              onChange={newVal => setColor(newVal)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"inputCustomColor\">\r\n            <Form.Label>Or choose a custom color</Form.Label>\r\n            <Form.Control\r\n              type=\"color\"\r\n              value={getHexColor(colorValue)}\r\n              onChange={evt => setColor(evt.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"row justify-content-around\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"col-md-3 col-sm-5 col-7\"\r\n            onClick={handleDismiss}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"info\"\r\n            className=\"col-md-3 col-sm-5 col-7\"\r\n            onClick={handleReset}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"col-md-3 col-sm-5 col-7\"\r\n            onClick={handleSave}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n      <Button variant=\"light\" onClick={handleClick}>\r\n        <span\r\n          className=\"align-middle d-inline-block\"\r\n          style={{\r\n            border: '1px solid currentColor',\r\n            backgroundColor: colorValue,\r\n            width: previewSize,\r\n            height: previewSize\r\n          }}\r\n        />\r\n        <span className=\"ml-2 align-middle d-inline-block no-xform-upper\">\r\n          {colorName}\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { isObjectEmpty } from '../../helpers/MiscHelpers';\nimport '../../styles/ChooseFontStyle.css';\nimport ColorPicker from '../FormElements/ColorPicker';\nimport InlineFormGroup from '../FormElements/InlineFormGroup';\n\r\n/**\r\n * Wizard page for selecting a table row's font styling.\r\n * @param {FormatWizardPageProps} props - the props object for the Choose Font Style wizard page\r\n */\r\nfunction ChooseFontStyle(props) {\r\n  const stepName = 'Choose Font Style';\r\n  const stepDescription = 'Select any changes you want to make to the font.';\r\n  const weights = [\r\n    { name: 'Normal', value: 'normal' },\r\n    { name: 'Bold', value: 'bold' },\r\n    { name: 'Really Bold', value: '900' }\r\n  ];\r\n  const sizes = [\r\n    { name: 'Normal', value: 'inherit' },\r\n    { name: 'Smaller', value: '0.75em' },\r\n    { name: 'Larger', value: '1.25em' },\r\n    { name: 'Much Larger', value: '1.5em' }\r\n  ];\r\n  const decorations = [\r\n    { name: 'Underline', value: 'underline' },\r\n    { name: 'Strike-Through', value: 'line-through' }\r\n  ];\r\n\r\n  const [fontStyle, setFontStyle] = useState(\r\n    (props.formatting.style && props.formatting.style.fontStyle === 'italic') ||\r\n      ''\r\n  );\r\n  const [fontDecoration, setFontDecoration] = useState(\r\n    (props.formatting.style && props.formatting.style.textDecorationLine) || ''\r\n  );\r\n  const [fontWeight, setFontWeight] = useState(\r\n    (props.formatting.style && props.formatting.style.fontWeight) || ''\r\n  );\r\n  const [fontColor, setFontColor] = useState(\r\n    (props.formatting.style && props.formatting.style.color) || ''\r\n  );\r\n  const [fontVariant, setFontVariant] = useState(\r\n    (props.formatting.style &&\r\n      props.formatting.style.fontVariant === 'small-caps') ||\r\n      ''\r\n  );\r\n  const [fontSize, setFontSize] = useState(\r\n    (props.formatting.style && props.formatting.style.fontSize) || ''\r\n  );\r\n\r\n  function handleStyleChange(newVal) {\r\n    const style = newVal ? 'italic' : '';\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.fontStyle = style;\r\n    if (style === '') delete formatting.style.fontStyle;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setFontStyle(newVal);\r\n  }\r\n\r\n  function handleDecorationChange(changedDecoration, newVal) {\r\n    let decoration = fontDecoration;\r\n    const index = decoration.indexOf(changedDecoration);\r\n    if (index === -1 && newVal) {\r\n      if (changedDecoration === 'underline')\r\n        decoration = changedDecoration + ' ' + decoration;\r\n      else decoration = decoration + ' ' + changedDecoration;\r\n    } else if (index !== -1 && !newVal) {\r\n      decoration = decoration.replace(changedDecoration, '').trim();\r\n    }\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.textDecorationLine = decoration;\r\n    if (decoration === '') delete formatting.style.textDecorationLine;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setFontDecoration(decoration);\r\n  }\r\n\r\n  function handleWeightChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.fontWeight = newVal;\r\n    if (newVal === '') delete formatting.style.fontWeight;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setFontWeight(newVal);\r\n  }\r\n\r\n  function handleColorChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.color = newVal;\r\n    if (newVal === '') delete formatting.style.color;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setFontColor(newVal);\r\n  }\r\n\r\n  function handleVariantChange(newVal) {\r\n    const variant = newVal ? 'small-caps' : '';\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.fontVariant = variant;\r\n    if (variant === '') delete formatting.style.fontVariant;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setFontVariant(newVal);\r\n  }\r\n\r\n  function handleSizeChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.fontSize = newVal;\r\n    if (newVal === '') delete formatting.style.fontSize;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setFontSize(newVal);\r\n  }\r\n\r\n  const decorationOptions = decorations.map(d => {\r\n    return (\r\n      <InlineFormGroup\r\n        controlId={'inputDecoration' + d.name}\r\n        label={d.name}\r\n        key={d.name}\r\n      >\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Example Text\"\r\n          className={'check-label-' + d.value}\r\n          checked={fontDecoration.indexOf(d.value) !== -1}\r\n          onChange={evt => handleDecorationChange(d.value, evt.target.checked)}\r\n        />\r\n      </InlineFormGroup>\r\n    );\r\n  });\r\n\r\n  const weightOptions = weights.map(w => {\r\n    return (\r\n      <option key={w.name} value={w.value}>\r\n        {w.name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const sizeOptions = sizes.map(s => {\r\n    return (\r\n      <option key={s.name} value={s.value}>\r\n        {s.name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    props.steps[props.curStep] === stepName && (\r\n      <>\r\n        <h5>{stepName}</h5>\r\n        <span className=\"form-text\">{stepDescription}</span>\r\n        <Form className=\"mt-3\">\r\n          <InlineFormGroup controlId=\"inputStyle\" label=\"Italic\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Example Text\"\r\n              style={{ fontStyle: 'italic' }}\r\n              checked={fontStyle}\r\n              onChange={evt => handleStyleChange(evt.target.checked)}\r\n            />\r\n          </InlineFormGroup>\r\n          {decorationOptions}\r\n          <InlineFormGroup controlId=\"inputFontWeight\" label=\"Font Weight\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={fontWeight}\r\n              onChange={evt => handleWeightChange(evt.target.value)}\r\n              style={{ minWidth: '9rem' }}\r\n            >\r\n              <option value=\"\">{'--- No change ---'}</option>\r\n              {weightOptions}\r\n            </Form.Control>\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"inputVariant\" label=\"Small Caps\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Example Text\"\r\n              style={{ fontVariant: 'small-caps' }}\r\n              checked={fontVariant}\r\n              onChange={evt => handleVariantChange(evt.target.checked)}\r\n            />\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"inputFontSize\" label=\"Font Size\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={fontSize}\r\n              onChange={evt => handleSizeChange(evt.target.value)}\r\n              style={{ minWidth: '9rem' }}\r\n            >\r\n              <option value=\"\">{'--- No change ---'}</option>\r\n              {sizeOptions}\r\n            </Form.Control>\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"inputFontColor\" label=\"Font Color\">\r\n            <ColorPicker\r\n              value={fontColor}\r\n              onChange={val => handleColorChange(val)}\r\n              style={{ minWidth: '9rem' }}\r\n            />\r\n          </InlineFormGroup>\r\n        </Form>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ChooseFontStyle;\r\n","import React from 'react';\r\nimport '../../styles/AnimationSelect.css';\r\nimport CustomSelect from './CustomSelect';\r\n\r\n/**\r\n * Array of available animations\r\n */\r\nexport const animations = [\r\n  {\r\n    name: 'Important!',\r\n    className: 'ani-important'\r\n  },\r\n  {\r\n    name: 'Loading',\r\n    className: 'ani-loading'\r\n  },\r\n  {\r\n    name: 'Throbbing',\r\n    className: 'ani-throbbing'\r\n  }\r\n];\r\n\r\n/**\r\n * A custom selector that lets you choose one of a few pre-defined animations.\r\n * @param {Object} props - properties object for AnimationSelect\r\n * @param {(animationStyle:string) => void} props.onChange - function to call when an animation is chosen\r\n * @param {string} props.value - The value of the selector\r\n */\r\nfunction AnimationSelect(props) {\r\n  function handleSelect(animation) {\r\n    if (animation.emptyString) {\r\n      props.onChange('');\r\n      return false;\r\n    }\r\n    props.onChange(animation.className);\r\n    return true;\r\n  }\r\n\r\n  function filter(animation, lowerCaseFilterText) {\r\n    return (\r\n      animation.name.toLowerCase().indexOf(lowerCaseFilterText) !== -1 ||\r\n      animation.className.toLowerCase().indexOf(lowerCaseFilterText) !== -1\r\n    );\r\n  }\r\n\r\n  function findAnimation(searchText) {\r\n    const value = searchText.toLowerCase();\r\n    const index = animations.findIndex(animation => {\r\n      return (\r\n        animation.name.toLowerCase() === value ||\r\n        animation.className.toLowerCase() === value\r\n      );\r\n    });\r\n    if (index !== -1) return animations[index];\r\n    else return null;\r\n  }\r\n\r\n  function findAnimationName(searchText) {\r\n    const animation = findAnimation(searchText);\r\n    if (animation) return animation.name;\r\n    else return '';\r\n  }\r\n\r\n  const items = animations.map(animation => {\r\n    return {\r\n      name: animation.name,\r\n      props: {\r\n        className: 'entry ' + animation.className,\r\n        style: {\r\n          color: animation.textColor,\r\n          backgroundColor: animation.colorString,\r\n          borderColor: animation.textColor\r\n        }\r\n      },\r\n      object: animation\r\n    };\r\n  });\r\n\r\n  return (\r\n    <CustomSelect\r\n      value={props.value}\r\n      items={items}\r\n      handleSelect={handleSelect}\r\n      filter={filter}\r\n      findItem={findAnimation}\r\n      findItemName={findAnimationName}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AnimationSelect;\r\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { isObjectEmpty } from '../../helpers/MiscHelpers';\nimport AnimationSelect, { animations } from '../FormElements/AnimationSelect';\nimport ColorPicker from '../FormElements/ColorPicker';\nimport InlineFormGroup from '../FormElements/InlineFormGroup';\n\r\n/**\r\n * Wizard page for selecting a table row's styling.\r\n * @param {FormatWizardPageProps} props - the props object for the Choose Row Style wizard page\r\n */\r\nfunction ChooseRowStyle(props) {\r\n  const stepName = 'Choose Row Style';\r\n  const stepDescription = 'Select any changes you want to make to the row.';\r\n  const alignments = [\r\n    { name: 'Default', value: 'initial' },\r\n    { name: 'Left', value: 'left' },\r\n    { name: 'Center', value: 'center' },\r\n    { name: 'Right', value: 'right' },\r\n    { name: 'Justify', value: 'justify' }\r\n  ];\r\n\r\n  const [className, setClassName] = useState(getAnimationClass());\r\n  const [backColor, setBackColor] = useState(\r\n    (props.formatting.style && props.formatting.style.backgroundColor) || ''\r\n  );\r\n  const [textAlign, setTextAlign] = useState(\r\n    (props.formatting.style && props.formatting.style.textAlign) || ''\r\n  );\r\n\r\n  function handleColorChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n\r\n    // handle the class that makes the row columns honor the background color override\r\n    let className = formatting.className || '';\r\n    if (newVal && className.indexOf('honor-row-bg') === -1)\r\n      className = className + ' honor-row-bg';\r\n    else if (!newVal && className.indexOf('honor-row-bg') !== -1) {\r\n      let classes = className.split(' ');\r\n      for (let i = 0; i < classes.length; i++) {\r\n        if (classes[i] === 'honor-row-bg') {\r\n          classes.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n      className = classes.join(' ');\r\n    }\r\n    formatting.className = className;\r\n    if (!className) delete formatting.className;\r\n\r\n    formatting.style.backgroundColor = newVal;\r\n    if (newVal === '') delete formatting.style.backgroundColor;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setBackColor(newVal);\r\n  }\r\n\r\n  function handleAlignChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    if (!formatting.style) formatting.style = {};\r\n    formatting.style.textAlign = newVal;\r\n    if (newVal === '') delete formatting.style.textAlign;\r\n    if (isObjectEmpty(formatting.style)) delete formatting.style;\r\n    props.setFormatting(formatting);\r\n    setTextAlign(newVal);\r\n  }\r\n\r\n  function handleClassChange(newVal) {\r\n    let formatting = Object.assign({}, props.formatting);\r\n    let classes =\r\n      (formatting.className && formatting.className.split(' ')) || [];\r\n    for (let i = 0; i < classes.length; i++) {\r\n      let index = animations.findIndex(a => a.className === classes[i]);\r\n      if (index !== -1) {\r\n        classes.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    classes.push(newVal);\r\n    const value = classes.join(' ');\r\n    formatting.className = value;\r\n    if (value === '') delete formatting.className;\r\n    props.setFormatting(formatting);\r\n    setClassName(newVal);\r\n  }\r\n\r\n  function getAnimationClass() {\r\n    let classes =\r\n      (props.formatting.className && props.formatting.className.split(' ')) ||\r\n      [];\r\n    for (let i = 0; i < classes.length; i++) {\r\n      let index = animations.findIndex(a => a.className === classes[i]);\r\n      if (index !== -1) return classes[i];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  const alignOptions = alignments.map(a => {\r\n    return (\r\n      <option key={a.name} value={a.value}>\r\n        {a.name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    props.steps[props.curStep] === stepName && (\r\n      <>\r\n        <h5>{stepName}</h5>\r\n        <span className=\"form-text\">{stepDescription}</span>\r\n        <Form className=\"mt-3\">\r\n          <InlineFormGroup\r\n            controlId=\"inputBackgroundColor\"\r\n            label=\"Background Color\"\r\n          >\r\n            <ColorPicker\r\n              value={backColor}\r\n              onChange={val => handleColorChange(val)}\r\n              style={{ minWidth: '9rem' }}\r\n            />\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"inputTextAlign\" label=\"Text Alignment\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={textAlign}\r\n              onChange={evt => handleAlignChange(evt.target.value)}\r\n              style={{ minWidth: '9rem' }}\r\n            >\r\n              <option value=\"\">{'--- No change ---'}</option>\r\n              {alignOptions}\r\n            </Form.Control>\r\n          </InlineFormGroup>\r\n          <InlineFormGroup controlId=\"inputAnimation\" label=\"Animation\">\r\n            <AnimationSelect\r\n              value={className}\r\n              onChange={val => handleClassChange(val)}\r\n              style={{ minWidth: '9rem' }}\r\n            />\r\n          </InlineFormGroup>\r\n        </Form>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ChooseRowStyle;\r\n","import React from 'react';\r\n\r\n/**\r\n * Wizard page stating that the user is done.\r\n * @param {WizardPageProps} props - the props object for the Choose Font Style wizard page\r\n */\r\nfunction FinishPage(props) {\r\n  const stepName = 'Finish';\r\n  const stepDescription = 'Click Save to apply your formatting changes.';\r\n  return (\r\n    props.steps[props.curStep] === stepName && (\r\n      <>\r\n        <h5>{stepName}</h5>\r\n        <span className=\"form-text\">{stepDescription}</span>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default FinishPage;\r\n","import React, { useState } from 'react';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { getLocalIsoDateAndTime } from '../helpers/TimeHelpers';\r\nimport { ReactComponent as WizardHat } from '../resources/wizard-hat.svg';\r\nimport '../styles/Modal.css';\r\nimport '../styles/RowFormattingWizard.css';\r\nimport '../styles/Table.css';\r\nimport TableRow from './TableRow';\r\nimport ChooseClass from './WizardPages/ChooseClass';\r\nimport ChooseFontStyle from './WizardPages/ChooseFontStyle';\r\nimport ChooseRowStyle from './WizardPages/ChooseRowStyle';\r\nimport FinishPage from './WizardPages/FinishPage';\r\n\r\nfunction RowFormattingWizard(props) {\r\n  const [showWizard, setShowWizard] = useState(false);\r\n  const [curStep, setCurStep] = useState(0);\r\n  const [formatting, setFormatting] = useState(parse(props.formatting));\r\n\r\n  const steps = [\r\n    'Choose Class',\r\n    'Choose Font Style',\r\n    'Choose Row Style',\r\n    'Finish'\r\n  ];\r\n\r\n  // Handlers\r\n  function handleWizardBtn() {\r\n    resetWizard();\r\n    setShowWizard(prev => !prev);\r\n  }\r\n\r\n  function handleDismiss() {\r\n    resetWizard();\r\n    setShowWizard(false);\r\n  }\r\n\r\n  function handleDone() {\r\n    props.setFormatting(JSON.stringify(formatting));\r\n    handleDismiss();\r\n  }\r\n\r\n  // Helpers\r\n  function parse(formattingString) {\r\n    const obj = JSON.parse(formattingString || '{}');\r\n    return obj;\r\n  }\r\n\r\n  function resetWizard() {\r\n    setCurStep(0);\r\n    setFormatting(parse(props.formatting));\r\n  }\r\n\r\n  // JSX generation\r\n  const breadcrumbs = steps.map((name, index) => {\r\n    return (\r\n      index <= curStep && (\r\n        <Breadcrumb.Item\r\n          {...(index === curStep && { active: true })}\r\n          {...(index < curStep && { href: '#' })}\r\n          key={name}\r\n          onClick={evt => {\r\n            evt.preventDefault();\r\n            setCurStep(index);\r\n          }}\r\n        >\r\n          {name}\r\n        </Breadcrumb.Item>\r\n      )\r\n    );\r\n  });\r\n  const [date, time] = getLocalIsoDateAndTime(new Date());\r\n  return (\r\n    <>\r\n      <Modal show={showWizard} onHide={handleDismiss} dialogClassName=\"modal-w\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Row Formatting Wizard</Modal.Title>\r\n        </Modal.Header>\r\n        <Breadcrumb className=\"modal-breadcrumb\">{breadcrumbs}</Breadcrumb>\r\n        <Table className=\"example-row\" bordered size=\"sm\">\r\n          <tbody>\r\n            <TableRow\r\n              date={date}\r\n              event=\"Example event...\"\r\n              formatting={JSON.stringify(formatting)}\r\n              onDelete={() => null}\r\n              time={time}\r\n            ></TableRow>\r\n          </tbody>\r\n        </Table>\r\n        <Modal.Body>\r\n          <ChooseClass\r\n            curStep={curStep}\r\n            steps={steps}\r\n            formatting={formatting}\r\n            setFormatting={setFormatting}\r\n          />\r\n          <ChooseFontStyle\r\n            curStep={curStep}\r\n            steps={steps}\r\n            formatting={formatting}\r\n            setFormatting={setFormatting}\r\n          />\r\n          <ChooseRowStyle\r\n            curStep={curStep}\r\n            steps={steps}\r\n            formatting={formatting}\r\n            setFormatting={setFormatting}\r\n          />\r\n          <FinishPage curStep={curStep} steps={steps} />\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"row justify-content-around\">\r\n          {curStep > 0 && (\r\n            <Button\r\n              variant=\"secondary\"\r\n              className=\"col-md-3 col-5\"\r\n              onClick={() => setCurStep(curStep > 0 ? curStep - 1 : 0)}\r\n            >\r\n              Previous\r\n            </Button>\r\n          )}\r\n          {curStep < steps.length - 1 && (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"col-md-3 col-5\"\r\n              onClick={() =>\r\n                setCurStep(\r\n                  curStep < steps.length - 1 ? curStep + 1 : steps.length - 1\r\n                )\r\n              }\r\n            >\r\n              Next\r\n            </Button>\r\n          )}\r\n          {curStep === steps.length - 1 && (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"col-md-3 col-5\"\r\n              onClick={handleDone}\r\n            >\r\n              Finish\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Button\r\n        variant=\"primary\"\r\n        className=\"wizard-logo-btn\"\r\n        onClick={() => handleWizardBtn()}\r\n      >\r\n        <WizardHat alt=\"Wizard hat\" className=\"wizard-btn-logo\" />\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RowFormattingWizard;\r\n","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport EventTypeSelector from '../components/FormElements/EventTypeSelector';\nimport PageHeading from '../components/PageHeading';\nimport RowFormattingWizard from '../components/RowFormattingWizard';\n\r\nfunction Types(props) {\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [formatting, setFormatting] = useState('');\r\n  const [deleteType, setDeleteType] = useState(false);\r\n  const [newType, setNewType] = useState(true);\r\n  const [alertText, setAlertText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!id) setId(String(Math.max(...props.evtTypes.map(t => t.id), 0) + 1));\r\n  }, [id, props.evtTypes]);\r\n\r\n  function handleTypeChange(type) {\r\n    if (!type.id) setNewType(true);\r\n    else setNewType(false);\r\n\r\n    setId(type.id || '');\r\n    setName(type.name || '');\r\n    setFormatting(type.formatting || '');\r\n    setDeleteType(type.hidden || false);\r\n  }\r\n\r\n  function handleSubmit() {\r\n    const evt = {\r\n      id: id,\r\n      name: name,\r\n      formatting: formatting,\r\n      hidden: deleteType\r\n    };\r\n    props.onEditType(evt);\r\n\r\n    setAlertText(\r\n      <>\r\n        {'Successfully modified '}\r\n        <strong>{name}</strong>\r\n        {' event type!'}\r\n      </>\r\n    );\r\n    setId('');\r\n    setName('');\r\n    setFormatting('');\r\n    setDeleteType(false);\r\n    setNewType(true);\r\n  }\r\n\r\n  const alerts = [\r\n    {\r\n      type: 'success',\r\n      dismissible: true,\r\n      onClose: () => setAlertText(''),\r\n      text: alertText\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageHeading alerts={alerts}>Event Type Management</PageHeading>\r\n      <Card border=\"primary\" className=\"mb-3\">\r\n        <Card.Body>\r\n          <Form>\r\n            <EventTypeSelector\r\n              evtTypes={props.evtTypes}\r\n              value={id}\r\n              onChange={newType => handleTypeChange(newType)}\r\n              description=\"Choose an event type if you want to modify an existing event.\"\r\n              nofilter={props.showHidden}\r\n            />\r\n            <InputName\r\n              value={name}\r\n              onChange={newName => setName(newName)}\r\n              disabled={deleteType}\r\n            />\r\n            <InputFormatting\r\n              value={formatting}\r\n              onChange={newFormatting => setFormatting(newFormatting)}\r\n              disabled={deleteType}\r\n            />\r\n            <CheckDelete\r\n              value={deleteType}\r\n              onChange={newValue => setDeleteType(newValue)}\r\n              show={!newType}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction InputName(props) {\r\n  return (\r\n    <Form.Group controlId=\"inputName\">\r\n      <Form.Label>Event Type Name</Form.Label>\r\n      <Form.Control\r\n        required\r\n        type=\"text\"\r\n        placeholder=\"Enter the event type name\"\r\n        value={props.value}\r\n        onChange={evt => props.onChange(evt.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nfunction InputFormatting(props) {\r\n  return (\r\n    <Form.Group controlId=\"inputFormatting\">\r\n      <Form.Label>Event Type Formatting</Form.Label>\r\n      <InputGroup>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter the event type formatting\"\r\n          value={props.value}\r\n          onChange={evt => props.onChange(evt.target.value)}\r\n        />\r\n        <InputGroup.Append>\r\n          <RowFormattingWizard\r\n            formatting={props.value}\r\n            setFormatting={props.onChange}\r\n          />\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nfunction CheckDelete(props) {\r\n  return (\r\n    props.show && (\r\n      <Form.Group controlId=\"inputDelete\">\r\n        <Form.Label className=\"text-danger\">Remove Event Type</Form.Label>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Delete this event type!\"\r\n          checked={props.value}\r\n          onChange={evt => props.onChange(evt.target.checked)}\r\n        />\r\n      </Form.Group>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Types;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nfunction RulesEngineAlerts(props) {\r\n  let alerts = [];\r\n\r\n  // TODO: Rules Engine...\r\n\r\n  const alertElements = alerts.map(alert => {\r\n    return (\r\n      <Alert\r\n        variant={alert.type || 'info'}\r\n        dismissible={!!alert.dismissible}\r\n        onClose={alert.onClose || null}\r\n      >\r\n        {alert.text}\r\n      </Alert>\r\n    );\r\n  });\r\n  return alertElements;\r\n}\r\n\r\nexport default RulesEngineAlerts;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { getLocalIsoDateAndTime } from '../helpers/TimeHelpers';\r\nimport useDatabase from '../hooks/useDatabase';\r\nimport useInterval from '../hooks/useInterval';\r\nimport useLocalChanges from '../hooks/useLocalChanges';\r\nimport useSettings from '../hooks/useSettings';\r\nimport History from '../pages/History';\r\nimport Home from '../pages/Home';\r\nimport Settings from '../pages/Settings';\r\nimport Types from '../pages/Types';\r\nimport RulesEngineAlerts from './RulesEngineAlerts';\r\n\r\nfunction DatabaseManagedRoutes() {\r\n  const database = useDatabase();\r\n  const localChanges = useLocalChanges();\r\n  const settings = useSettings();\r\n\r\n  // instance variables (reset every render)\r\n  const syncInterval = settings.pollInterval || 5; // if allow offline changes is true, try to reconnect to the server this often\r\n  let exitingOfflineOnly = false;\r\n  let eventTypeChangeQueue;\r\n  let eventChangeQueue;\r\n\r\n  // Fetch data for initial load\r\n  useEffect(() => {\r\n    if (!database.lastSync) {\r\n      syncData();\r\n    }\r\n  });\r\n\r\n  // TODO: add more robust/helpful (logging) error handling\r\n\r\n  //#region Intervals\r\n  // Refresh data based on poll interval\r\n  useInterval(\r\n    () => {\r\n      syncData();\r\n    },\r\n    !settings.offlineOnly && settings.pollInterval > 0\r\n      ? settings.pollInterval * 60000\r\n      : null\r\n  );\r\n\r\n  // Try to sync local changes when not connected\r\n  useInterval(\r\n    () => {\r\n      syncData();\r\n    },\r\n    !settings.offlineOnly &&\r\n      database.notConnected &&\r\n      settings.allowOfflineChanges &&\r\n      localChanges.changes !== null\r\n      ? syncInterval * 60000\r\n      : null\r\n  );\r\n  //#endregion\r\n\r\n  //#region Handlers\r\n  async function handleEditType(evtType) {\r\n    let succeeds = true;\r\n    // TODO: uncomment\r\n    //succeeds = database.tryModifyType(evtType);\r\n\r\n    if (succeeds && !settings.offlineOnly) {\r\n      database.updateEventTypesInRAM([evtType]);\r\n    } else {\r\n      database.setNotConnected(true);\r\n      if (localChangesAllowed()) localChanges.trackEventType(evtType);\r\n    }\r\n  }\r\n\r\n  async function handleNewEvent(id, timeStr) {\r\n    let succeeds = true;\r\n    const newEvt = generateNewEvent(id, timeStr);\r\n    // TODO: uncomment\r\n    //succeeds = await database.tryCreateEvent(newEvt);\r\n\r\n    if (succeeds && !settings.offlineOnly) {\r\n      database.addNewEventsToRAM([newEvt]);\r\n    } else {\r\n      database.setNotConnected(true);\r\n      if (localChangesAllowed()) localChanges.trackNewEvent(newEvt);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteEvent(id) {\r\n    let succeeds = true;\r\n    // TODO: uncomment\r\n    //succeeds = await database.tryDeleteEvent(id);\r\n\r\n    if (succeeds && !settings.offlineOnly) {\r\n      database.deleteEventsFromRAM([id]);\r\n    } else {\r\n      database.setNotConnected(true);\r\n      if (localChangesAllowed()) localChanges.trackDeletedEvent(id);\r\n    }\r\n  }\r\n\r\n  function handleSetOfflineOnly(newVal) {\r\n    if (!newVal) {\r\n      exitingOfflineOnly = true;\r\n      syncData();\r\n    }\r\n    settings.setOfflineOnly(newVal);\r\n  }\r\n  //#endregion\r\n\r\n  //#region Helpers\r\n  function generateNewEvent(\r\n    id,\r\n    timeStr = null,\r\n    dateTime,\r\n    otherReservedEventIds = []\r\n  ) {\r\n    // get the highest existing event id.   TODO: check if there's a more efficient way\r\n    // TODO: maybe extract localChanges logic to a separate function\r\n    let ids;\r\n    if (exitingOfflineOnly) {\r\n      ids = eventChangeQueue.map(e => e.id).concat(otherReservedEventIds);\r\n    } else {\r\n      const newEvtIds =\r\n        localChanges.changes && localChanges.changes.newEvents\r\n          ? localChanges.changes.newEvents.map(e => e.id)\r\n          : [];\r\n      ids = database.events.map(e => e.id).concat(newEvtIds);\r\n    }\r\n    let max = -1;\r\n    for (let i of ids) if (i > max) max = i; // eslint-disable-line no-unused-vars\r\n\r\n    const newId = String(Number(max) + 1);\r\n    if (!dateTime) {\r\n      const [date, time] = getLocalIsoDateAndTime(new Date());\r\n      if (timeStr) {\r\n        dateTime = new Date(date + 'T' + timeStr).getTime();\r\n      } else {\r\n        dateTime = new Date(date + 'T' + time).getTime();\r\n      }\r\n    }\r\n\r\n    return {\r\n      datetime: dateTime,\r\n      event: id,\r\n      id: newId\r\n    };\r\n  }\r\n\r\n  function localChangesAllowed() {\r\n    return (\r\n      !exitingOfflineOnly &&\r\n      (settings.offlineOnly || settings.allowOfflineChanges)\r\n    );\r\n  }\r\n\r\n  function tryPushLocalChanges() {\r\n    const newLocalChanges = Object.assign({}, localChanges.changes);\r\n    let error = false;\r\n    let eventTypeChanges = [];\r\n    let eventsToDelete = [];\r\n    let newEventsToPush = [];\r\n\r\n    // handle new/modified event types\r\n    if (!error && localChanges.changes.eventTypes) {\r\n      eventTypeChanges = localChanges.changes.eventTypes.slice();\r\n      const successes = database.bulkUpdateEventTypes(\r\n        eventTypeChanges,\r\n        eventTypeChangeQueue\r\n      );\r\n      eventTypeChangeQueue = database.updateEventTypesInRAM(\r\n        successes,\r\n        eventTypeChangeQueue\r\n      );\r\n      newLocalChanges.eventTypes = eventTypeChanges;\r\n    }\r\n    if (eventTypeChanges.length > 0) error = true;\r\n\r\n    // handle deletes\r\n    if (!error && localChanges.changes.deleteEvents) {\r\n      eventsToDelete = localChanges.changes.deleteEvents.slice();\r\n      const successes = database.bulkDeleteEvents(\r\n        eventsToDelete,\r\n        eventChangeQueue\r\n      );\r\n      eventChangeQueue = database.deleteEventsFromRAM(successes, true);\r\n      newLocalChanges.deleteEvents = eventsToDelete;\r\n    }\r\n    if (eventsToDelete.length > 0) error = true;\r\n\r\n    // handle new events\r\n    if (!error && localChanges.changes.newEvents) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      for (let evt of localChanges.changes.newEvents) {\r\n        newEventsToPush.push(\r\n          generateNewEvent(\r\n            evt.event,\r\n            null,\r\n            evt.datetime,\r\n            newEventsToPush.map(e => e.id)\r\n          )\r\n        );\r\n      }\r\n      const successes = database.bulkAddEvents(newEventsToPush);\r\n      eventChangeQueue = database.addNewEventsToRAM(\r\n        successes,\r\n        eventChangeQueue\r\n      );\r\n      newLocalChanges.newEvents = newEventsToPush;\r\n    }\r\n    if (newEventsToPush.length > 0) error = true;\r\n\r\n    // Handle error condition\r\n    if (!error) {\r\n      localChanges.setChanges(null);\r\n    } else {\r\n      localChanges.setChanges(newLocalChanges);\r\n    }\r\n    return error;\r\n  }\r\n  //#endregion\r\n\r\n  async function syncData() {\r\n    let error = false,\r\n      success;\r\n    eventTypeChangeQueue = database.eventTypes.slice();\r\n    eventChangeQueue = database.events.slice();\r\n\r\n    [\r\n      success,\r\n      eventTypeChangeQueue,\r\n      eventChangeQueue\r\n    ] = await database.tryPullChanges(eventTypeChangeQueue, eventChangeQueue);\r\n    if (!success) error = true;\r\n\r\n    if (\r\n      !error &&\r\n      localChanges.changes !== null &&\r\n      (!settings.offlineOnly || exitingOfflineOnly)\r\n    ) {\r\n      error = tryPushLocalChanges();\r\n    }\r\n    database.setNotConnected(error); // TODO: Show alert\r\n    database.setEventTypes(eventTypeChangeQueue);\r\n    database.setEvents(eventChangeQueue);\r\n    console.log('pretend the data was synced to a databse :)');\r\n  }\r\n\r\n  const [events, eventTypes] = localChanges.apply(\r\n    database.events.slice(),\r\n    database.eventTypes.slice()\r\n  );\r\n\r\n  return [\r\n    <RulesEngineAlerts key=\"rules-engine-alerts\" />, // TODO: Notifications page/dropdown w/ badge\r\n    <Route\r\n      path=\"/\"\r\n      exact\r\n      render={() => (\r\n        <Home\r\n          evtTypes={eventTypes}\r\n          rows={events}\r\n          onNewEvent={handleNewEvent}\r\n          onDeleteEvent={handleDeleteEvent}\r\n          offlineOnly={settings.offlineOnly}\r\n          onRefresh={syncData}\r\n        />\r\n      )}\r\n      key=\"home\"\r\n    />,\r\n    <Route\r\n      path=\"/history/\"\r\n      render={() => (\r\n        <History\r\n          evtTypes={eventTypes}\r\n          rows={events}\r\n          timeSinceFormat={settings.timeSinceFormat}\r\n        />\r\n      )}\r\n      key=\"history\"\r\n    />,\r\n    <Route\r\n      path=\"/type-management/\"\r\n      render={() => (\r\n        <Types\r\n          evtTypes={eventTypes}\r\n          onEditType={handleEditType}\r\n          showHidden={settings.showHiddenTypes}\r\n        />\r\n      )}\r\n      key=\"type-management\"\r\n    />,\r\n    <Route\r\n      path=\"/settings/\"\r\n      render={() => (\r\n        <Settings\r\n          pollInterval={settings.pollInterval}\r\n          onChangePollInterval={newVal => settings.setPollInterval(newVal)}\r\n          showHiddenTypes={settings.showHiddenTypes}\r\n          onChangeShowHiddenTypes={newVal =>\r\n            settings.setShowHiddenTypes(newVal)\r\n          }\r\n          timeSinceFormat={settings.timeSinceFormat}\r\n          onChangeTimeSinceFormat={newVal =>\r\n            settings.setTimeSinceFormat(newVal)\r\n          }\r\n          allowOfflineChanges={settings.allowOfflineChanges}\r\n          onChangeAllowOfflineChanges={newVal =>\r\n            settings.setAllowOfflineChanges(newVal)\r\n          }\r\n          offlineOnly={settings.offlineOnly}\r\n          onChangeOfflineOnly={newVal => handleSetOfflineOnly(newVal)}\r\n        />\r\n      )}\r\n      key=\"settings\"\r\n    />\r\n  ];\r\n}\r\n\r\nexport default DatabaseManagedRoutes;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactComponent as Logo } from '../resources/logo.svg';\r\n\r\n/**\r\n * The Navigation Bar component for this app. It remains at the top at all times.\r\n * @param {Object} props - The props object for NavigationBar\r\n * @param {string} props.basename - The base folder of the hosted application. Needed for the Logo link.\r\n */\r\nfunction NavigationBar(props) {\r\n  const [navCollapsed, setNavCollapsed] = useState(true);\r\n\r\n  function changeCollapsed(toggle) {\r\n    let collapse;\r\n    if (toggle) collapse = !navCollapsed;\r\n    else collapse = true;\r\n    setNavCollapsed(collapse);\r\n  }\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" bg=\"primary\" variant=\"dark\" expanded={!navCollapsed}>\r\n      <Navbar.Brand href={props.basename}>\r\n        {/* TODO: determine if I want to change this to a Link instead (so that it doesn't reload the app) */}\r\n        <Logo className=\"d-inline-block align-top logo\" />\r\n        {' TestApp'}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle onClick={() => changeCollapsed(true)} />\r\n      <Navbar.Collapse\r\n        className=\"justify-content-end\"\r\n        onClick={() => changeCollapsed()}\r\n      >\r\n        <Nav>\r\n          <Nav.Link as={Link} to=\"/\">\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/history/\">\r\n            Event History\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/type-management/\">\r\n            Event Type Management\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/settings/\">\r\n            Settings\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/about/\">\r\n            About\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport logo from '../resources/logo.svg';\r\nimport '../styles/About.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport DbRoutes from './components/DatabaseManagedRoutes';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport About from './pages/About';\r\n\r\n// Router\r\nfunction AppRouter() {\r\n  const basename = '/TestReactApp';\r\n  return (\r\n    <Router basename={basename}>\r\n      <Container>\r\n        <NavigationBar basename={basename} />\r\n\r\n        <DbRoutes />\r\n        <Route path=\"/about/\" component={About} />\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}